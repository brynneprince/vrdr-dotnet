<?xml version="1.0"?>
<doc>
    <assembly>
        <name>DeathRecord</name>
    </assembly>
    <members>
        <member name="T:FhirDeathRecord.DeathRecord">
            <summary>Class <c>DeathRecord</c> models a FHIR Vital Records Death Reporting (VRDR) Death
            Record. This class was designed to help consume and produce death records that follow the
            HL7 FHIR Vital Records Death Reporting Implementation Guide, as described at:
            http://hl7.org/fhir/us/vrdr and https://github.com/hl7/vrdr.
            </summary>
        </member>
        <member name="F:FhirDeathRecord.DeathRecord.MortalityData">
            <summary>Mortality data for code translations.</summary>
        </member>
        <member name="F:FhirDeathRecord.DeathRecord.Navigator">
            <summary>Useful for navigating around the FHIR Bundle using FHIRPaths.</summary>
        </member>
        <member name="F:FhirDeathRecord.DeathRecord.Bundle">
            <summary>Bundle that contains the death record.</summary>
        </member>
        <member name="F:FhirDeathRecord.DeathRecord.Composition">
            <summary>Composition that described what the Bundle is, as well as keeping references to its contents.</summary>
        </member>
        <member name="F:FhirDeathRecord.DeathRecord.Decedent">
            <summary>The Decedent.</summary>
        </member>
        <member name="F:FhirDeathRecord.DeathRecord.Certifier">
            <summary>The Certifier.</summary>
        </member>
        <member name="F:FhirDeathRecord.DeathRecord.Mortician">
            <summary>The Mortician.</summary>
        </member>
        <member name="F:FhirDeathRecord.DeathRecord.DeathCertification">
            <summary>The Certification.</summary>
        </member>
        <member name="F:FhirDeathRecord.DeathRecord.InterestedParty">
            <summary>The Interested Party.</summary>
        </member>
        <member name="F:FhirDeathRecord.DeathRecord.MannerOfDeath">
            <summary>The Manner of Death Observation.</summary>
        </member>
        <member name="F:FhirDeathRecord.DeathRecord.ConditionContributingToDeath">
            <summary>Condition Contributing to Death.</summary>
        </member>
        <member name="F:FhirDeathRecord.DeathRecord.CauseOfDeathConditionA">
            <summary>Cause Of Death Condition Line A.</summary>
        </member>
        <member name="F:FhirDeathRecord.DeathRecord.CauseOfDeathConditionB">
            <summary>Cause Of Death Condition Line B.</summary>
        </member>
        <member name="F:FhirDeathRecord.DeathRecord.CauseOfDeathConditionC">
            <summary>Cause Of Death Condition Line C.</summary>
        </member>
        <member name="F:FhirDeathRecord.DeathRecord.CauseOfDeathConditionD">
            <summary>Cause Of Death Condition Line D.</summary>
        </member>
        <member name="F:FhirDeathRecord.DeathRecord.CauseOfDeathConditionPathway">
            <summary>Cause Of Death Condition Pathway.</summary>
        </member>
        <member name="F:FhirDeathRecord.DeathRecord.Father">
            <summary>Decedent's Father.</summary>
        </member>
        <member name="F:FhirDeathRecord.DeathRecord.Mother">
            <summary>Decedent's Mother.</summary>
        </member>
        <member name="F:FhirDeathRecord.DeathRecord.Spouse">
            <summary>Decedent's Spouse.</summary>
        </member>
        <member name="F:FhirDeathRecord.DeathRecord.DecedentEducationLevel">
            <summary>Decedent Education Level.</summary>
        </member>
        <member name="F:FhirDeathRecord.DeathRecord.BirthRecordIdentifier">
            <summary>Birth Record Identifier.</summary>
        </member>
        <member name="F:FhirDeathRecord.DeathRecord.EmploymentHistory">
            <summary>Employment History.</summary>
        </member>
        <member name="F:FhirDeathRecord.DeathRecord.FuneralHome">
            <summary>The Funeral Home.</summary>
        </member>
        <member name="F:FhirDeathRecord.DeathRecord.FuneralHomeDirector">
            <summary>The Funeral Home Director.</summary>
        </member>
        <member name="F:FhirDeathRecord.DeathRecord.DispositionLocation">
            <summary>Disposition Location.</summary>
        </member>
        <member name="F:FhirDeathRecord.DeathRecord.DispositionMethod">
            <summary>Disposition Method.</summary>
        </member>
        <member name="F:FhirDeathRecord.DeathRecord.AutopsyPerformed">
            <summary>Autopsy Performed.</summary>
        </member>
        <member name="F:FhirDeathRecord.DeathRecord.AgeAtDeathObs">
            <summary>Age At Death.</summary>
        </member>
        <member name="F:FhirDeathRecord.DeathRecord.PregnancyObs">
            <summary>Decedent Pregnancy Status.</summary>
        </member>
        <member name="F:FhirDeathRecord.DeathRecord.TransportationRoleObs">
            <summary>Transportation Role (in death).</summary>
        </member>
        <member name="F:FhirDeathRecord.DeathRecord.ExaminerContactedObs">
            <summary>Examiner Contacted.</summary>
        </member>
        <member name="F:FhirDeathRecord.DeathRecord.TobaccoUseObs">
            <summary>Tobacco Use Contributed To Death.</summary>
        </member>
        <member name="F:FhirDeathRecord.DeathRecord.InjuryLocationLoc">
            <summary>Injury Location.</summary>
        </member>
        <member name="F:FhirDeathRecord.DeathRecord.InjuryIncidentObs">
            <summary>Injury Incident.</summary>
        </member>
        <member name="F:FhirDeathRecord.DeathRecord.DeathLocationLoc">
            <summary>Death Location.</summary>
        </member>
        <member name="F:FhirDeathRecord.DeathRecord.DeathDateObs">
            <summary>Date Of Death.</summary>
        </member>
        <member name="M:FhirDeathRecord.DeathRecord.#ctor">
            <summary>Default constructor that creates a new, empty FHIR SDR.</summary>
        </member>
        <member name="M:FhirDeathRecord.DeathRecord.#ctor(System.String,System.Boolean)">
            <summary>Constructor that takes a string that represents a FHIR SDR in either XML or JSON format.</summary>
            <param name="record">represents a FHIR SDR in either XML or JSON format.</param>
            <param name="permissive">if the parser should be permissive when parsing the given string</param>
            <exception cref="T:System.ArgumentException">Record is neither valid XML nor JSON.</exception>
        </member>
        <member name="M:FhirDeathRecord.DeathRecord.ToXML">
            <summary>Helper method to return a XML string representation of this Death Record.</summary>
            <returns>a string representation of this Death Record in XML format</returns>
        </member>
        <member name="M:FhirDeathRecord.DeathRecord.ToXml">
            <summary>Helper method to return a XML string representation of this Death Record.</summary>
            <returns>a string representation of this Death Record in XML format</returns>
        </member>
        <member name="M:FhirDeathRecord.DeathRecord.ToJSON">
            <summary>Helper method to return a JSON string representation of this Death Record.</summary>
            <returns>a string representation of this Death Record in JSON format</returns>
        </member>
        <member name="M:FhirDeathRecord.DeathRecord.ToJson">
            <summary>Helper method to return a JSON string representation of this Death Record.</summary>
            <returns>a string representation of this Death Record in JSON format</returns>
        </member>
        <member name="M:FhirDeathRecord.DeathRecord.GetITypedElement">
            <summary>Helper method to return an ITypedElement of the record bundle.</summary>
            <returns>an ITypedElement of the record bundle</returns>
        </member>
        <member name="P:FhirDeathRecord.DeathRecord.Identifier">
            <summary>Death Record Identifier.</summary>
            <value>a record identification string.</value>
            <example>
            <para>// Setter:</para>
            <para>ExampleDeathRecord.Identifier = "42";</para>
            <para>// Getter:</para>
            <para>Console.WriteLine($"Record identification: {ExampleDeathRecord.Identifier}");</para>
            </example>
        </member>
        <member name="P:FhirDeathRecord.DeathRecord.BundleIdentifier">
            <summary>Death Record Bundle Identifier.</summary>
            <value>a record bundle identification string.</value>
            <example>
            <para>// Setter:</para>
            <para>ExampleDeathRecord.BundleIdentifier = "42";</para>
            <para>// Getter:</para>
            <para>Console.WriteLine($"Record bundle identification: {ExampleDeathRecord.BundleIdentifier}");</para>
            </example>
        </member>
        <member name="P:FhirDeathRecord.DeathRecord.CertifiedTime">
            <summary>Certified time.</summary>
            <value>time when the record was certified.</value>
            <example>
            <para>// Setter:</para>
            <para>ExampleDeathRecord.CertifiedTime = "2019-01-29T16:48:06.4988220-05:00";</para>
            <para>// Getter:</para>
            <para>Console.WriteLine($"Certified at: {ExampleDeathRecord.CertifiedTime}");</para>
            </example>
        </member>
        <member name="P:FhirDeathRecord.DeathRecord.CreatedTime">
            <summary>Created time.</summary>
            <value>time when the record was created.</value>
            <example>
            <para>// Setter:</para>
            <para>ExampleDeathRecord.CreatedTime = "2019-01-29T16:48:06.4988220-05:00";</para>
            <para>// Getter:</para>
            <para>Console.WriteLine($"Created at: {ExampleDeathRecord.CreatedTime}");</para>
            </example>
        </member>
        <member name="P:FhirDeathRecord.DeathRecord.CertifierRole">
            <summary>Certifier Role.</summary>
            <value>the certifier role. A Dictionary representing a code, containing the following key/value pairs:
            <para>"code" - the code</para>
            <para>"system" - the code system this code belongs to</para>
            <para>"display" - a human readable meaning of the code</para>
            </value>
            <example>
            <para>// Setter:</para>
            <para>Dictionary&lt;string, string&gt; role = new Dictionary&lt;string, string&gt;();</para>
            <para>role.Add("code", "309343006");</para>
            <para>role.Add("system", "http://snomed.info/sct");</para>
            <para>role.Add("display", "Physician");</para>
            <para>ExampleDeathRecord.CertifierRole = role;</para>
            <para>// Getter:</para>
            <para>Console.WriteLine($"Certifier Role: {ExampleDeathRecord.CertifierRole['display']}");</para>
            </example>
        </member>
        <member name="P:FhirDeathRecord.DeathRecord.InterestedPartyIdentifier">
            <summary>Interested Party Identifier.</summary>
            <value>an interested party identification string.</value>
            <example>
            <para>// Setter:</para>
            <para>ExampleDeathRecord.InterestedPartyIdentifier = "42";</para>
            <para>// Getter:</para>
            <para>Console.WriteLine($"Interested Party identification: {ExampleDeathRecord.InterestedPartyIdentifier}");</para>
            </example>
        </member>
        <member name="P:FhirDeathRecord.DeathRecord.InterestedPartyName">
            <summary>Interested Party Name.</summary>
            <value>an interested party name string.</value>
            <example>
            <para>// Setter:</para>
            <para>ExampleDeathRecord.InterestedPartyName = "Fourty Two";</para>
            <para>// Getter:</para>
            <para>Console.WriteLine($"Interested Party name: {ExampleDeathRecord.InterestedPartyName}");</para>
            </example>
        </member>
        <member name="P:FhirDeathRecord.DeathRecord.InterestedPartyAddress">
            <summary>Interested Party's address.</summary>
            <value>Interested Party's address. A Dictionary representing an address, containing the following key/value pairs:
            <para>"addressLine1" - address, line one</para>
            <para>"addressLine2" - address, line two</para>
            <para>"addressCity" - address, city</para>
            <para>"addressCounty" - address, county</para>
            <para>"addressState" - address, state</para>
            <para>"addressZip" - address, zip</para>
            <para>"addressCountry" - address, country</para>
            </value>
            <example>
            <para>// Setter:</para>
            <para>Dictionary&lt;string, string&gt; address = new Dictionary&lt;string, string&gt;();</para>
            <para>address.Add("addressLine1", "9 Example Street");</para>
            <para>address.Add("addressLine2", "Line 2");</para>
            <para>address.Add("addressCity", "Bedford");</para>
            <para>address.Add("addressCounty", "Middlesex");</para>
            <para>address.Add("addressState", "Massachusetts");</para>
            <para>address.Add("addressZip", "12345");</para>
            <para>address.Add("addressCountry", "United States");</para>
            <para>ExampleDeathRecord.InterestedPartyAddress = address;</para>
            <para>// Getter:</para>
            <para>Console.WriteLine($"Interested Party state: {ExampleDeathRecord.InterestedPartyAddress["addressState"]}");</para>
            </example>
        </member>
        <member name="P:FhirDeathRecord.DeathRecord.InterestedPartyType">
            <summary>Interested Party Type.</summary>
            <value>the interested party type. A Dictionary representing a code, containing the following key/value pairs:
            <para>"code" - the code</para>
            <para>"system" - the code system this code belongs to</para>
            <para>"display" - a human readable meaning of the code</para>
            </value>
            <example>
            <para>// Setter:</para>
            <para>Dictionary&lt;string, string&gt; type = new Dictionary&lt;string, string&gt;();</para>
            <para>type.Add("code", "prov");</para>
            <para>type.Add("system", "http://terminology.hl7.org/CodeSystem/organization-type");</para>
            <para>type.Add("display", "Healthcare Provider");</para>
            <para>ExampleDeathRecord.InterestedPartyType = type;</para>
            <para>// Getter:</para>
            <para>Console.WriteLine($"Interested Party Type: {ExampleDeathRecord.InterestedPartyType['display']}");</para>
            </example>
        </member>
        <member name="P:FhirDeathRecord.DeathRecord.MannerOfDeathType">
            <summary>Manner of Death Type.</summary>
            <value>the manner of death type. A Dictionary representing a code, containing the following key/value pairs:
            <para>"code" - the code</para>
            <para>"system" - the code system this code belongs to</para>
            <para>"display" - a human readable meaning of the code</para>
            </value>
            <example>
            <para>// Setter:</para>
            <para>Dictionary&lt;string, string&gt; manner = new Dictionary&lt;string, string&gt;();</para>
            <para>manner.Add("code", "7878000");</para>
            <para>manner.Add("system", "");</para>
            <para>manner.Add("display", "Accident");</para>
            <para>ExampleDeathRecord.MannerOfDeathType = manner;</para>
            <para>// Getter:</para>
            <para>Console.WriteLine($"Manner Of Death Type: {ExampleDeathRecord.MannerOfDeathType['display']}");</para>
            </example>
        </member>
        <member name="P:FhirDeathRecord.DeathRecord.CertifierGivenNames">
            <summary>Given name(s) of certifier.</summary>
            <value>the certifier's name (first, middle, etc.)</value>
            <example>
            <para>// Setter:</para>
            <para>string[] names = { "Doctor", "Middle" };</para>
            <para>ExampleDeathRecord.CertifierGivenNames = names;</para>
            <para>// Getter:</para>
            <para>Console.WriteLine($"Certifier Given Name(s): {string.Join(", ", ExampleDeathRecord.CertifierGivenNames)}");</para>
            </example>
        </member>
        <member name="P:FhirDeathRecord.DeathRecord.CertifierFamilyName">
            <summary>Family name of certifier.</summary>
            <value>the certifier's family name (i.e. last name)</value>
            <example>
            <para>// Setter:</para>
            <para>ExampleDeathRecord.CertifierFamilyName = "Last";</para>
            <para>// Getter:</para>
            <para>Console.WriteLine($"Certifier's Last Name: {ExampleDeathRecord.CertifierFamilyName}");</para>
            </example>
        </member>
        <member name="P:FhirDeathRecord.DeathRecord.CertifierSuffix">
            <summary>Certifier's Suffix.</summary>
            <value>the certifier's suffix</value>
            <example>
            <para>// Setter:</para>
            <para>ExampleDeathRecord.CertifierSuffix = "Jr.";</para>
            <para>// Getter:</para>
            <para>Console.WriteLine($"Certifier Suffix: {ExampleDeathRecord.CertifierSuffix}");</para>
            </example>
        </member>
        <member name="P:FhirDeathRecord.DeathRecord.CertifierAddress">
            <summary>Certifier's Address.</summary>
            <value>the certifier's address. A Dictionary representing an address, containing the following key/value pairs:
            <para>"addressLine1" - address, line one</para>
            <para>"addressLine2" - address, line two</para>
            <para>"addressCity" - address, city</para>
            <para>"addressCounty" - address, county</para>
            <para>"addressState" - address, state</para>
            <para>"addressZip" - address, zip</para>
            <para>"addressCountry" - address, country</para>
            </value>
            <example>
            <para>// Setter:</para>
            <para>Dictionary&lt;string, string&gt; address = new Dictionary&lt;string, string&gt;();</para>
            <para>address.Add("addressLine1", "123 Test Street");</para>
            <para>address.Add("addressLine2", "Unit 3");</para>
            <para>address.Add("addressCity", "Boston");</para>
            <para>address.Add("addressCounty", "Suffolk");</para>
            <para>address.Add("addressState", "Massachusetts");</para>
            <para>address.Add("addressZip", "12345");</para>
            <para>address.Add("addressCountry", "United States");</para>
            <para>ExampleDeathRecord.CertifierAddress = address;</para>
            <para>// Getter:</para>
            <para>foreach(var pair in ExampleDeathRecord.CertifierAddress)</para>
            <para>{</para>
            <para>  Console.WriteLine($"\tCertifierAddress key: {pair.Key}: value: {pair.Value}");</para>
            <para>};</para>
            </example>
        </member>
        <member name="P:FhirDeathRecord.DeathRecord.CertifierQualification">
            <summary>Certifier Qualification.</summary>
            <value>the certifier qualification. A Dictionary representing a code, containing the following key/value pairs:
            <para>"code" - the code</para>
            <para>"system" - the code system this code belongs to</para>
            <para>"display" - a human readable meaning of the code</para>
            </value>
            <example>
            <para>// Setter:</para>
            <para>Dictionary&lt;string, string&gt; qualification = new Dictionary&lt;string, string&gt;();</para>
            <para>qualification.Add("code", "MD");</para>
            <para>qualification.Add("system", "http://hl7.org/fhir/v2/0360/2.7");</para>
            <para>qualification.Add("display", "Doctor of Medicine");</para>
            <para>ExampleDeathRecord.CertifierQualification = qualification;</para>
            <para>// Getter:</para>
            <para>Console.WriteLine($"\tCertifier Qualification: {ExampleDeathRecord.CertifierQualification['display']}");</para>
            </example>
        </member>
        <member name="P:FhirDeathRecord.DeathRecord.ContributingConditions">
            <summary>Significant conditions that contributed to death but did not result in the underlying cause.
            Corresponds to part 2 of item 32 of the U.S. Standard Certificate of Death.</summary>
            <value>A string containing the significant conditions that contributed to death but did not result in
            the underlying cause captured by a CauseOfDeathCondition.</value>
            <example>
            <para>// Setter:</para>
            <para>ExampleDeathRecord.ContributingConditions = "Example Contributing Condition";</para>
            <para>// Getter:</para>
            <para>Console.WriteLine($"Cause: {ExampleDeathRecord.ContributingConditions}");</para>
            </example>
        </member>
        <member name="P:FhirDeathRecord.DeathRecord.CausesOfDeath">
            <summary>Conditions that resulted in the cause of death. Corresponds to part 1 of item 32 of the U.S.
            Standard Certificate of Death.</summary>
            <value>Conditions that resulted in the underlying cause of death. An array of tuples (in the order they would
            appear on a death certificate, from top to bottom), each containing the cause of death literal (Tuple "Item1") the
            approximate onset to death (Tuple "Item2"), and an (optional) Dictionary representing a code, containing the following key/value pairs:
            <para>"code" - the code describing this finding</para>
            <para>"system" - the system the given code belongs to</para>
            <para>"display" - the human readable display text that corresponds to the given code</para>
            </value>
            <example>
            <para>// Setter:</para>
            <para>Tuple&lt;string, string, Dictionary&lt;string, string&gt;&gt;[] causes =</para>
            <para>{</para>
            <para>    Tuple.Create("Example Immediate COD", "minutes", new Dictionary&lt;string, string&gt;(){ {"code", "1234"}, {"system", "example"} }),</para>
            <para>    Tuple.Create("Example Underlying COD 1", "2 hours", new Dictionary&lt;string, string&gt;()),</para>
            <para>    Tuple.Create("Example Underlying COD 2", "6 months", new Dictionary&lt;string, string&gt;()),</para>
            <para>    Tuple.Create("Example Underlying COD 3", "15 years", new Dictionary&lt;string, string&gt;())</para>
            <para>};</para>
            <para>ExampleDeathRecord.CausesOfDeath = causes;</para>
            <para>// Getter:</para>
            <para>Tuple&lt;string, string&gt;[] causes = ExampleDeathRecord.CausesOfDeath;</para>
            <para>foreach (var cause in causes)</para>
            <para>{</para>
            <para>    Console.WriteLine($"Cause: {cause.Item1}, Onset: {cause.Item2}, Code: {cause.Item3}");</para>
            <para>}</para>
            </example>
        </member>
        <member name="P:FhirDeathRecord.DeathRecord.COD1A">
            <summary>Cause of Death Part I, Line a.</summary>
            <value>the immediate cause of death literal.</value>
            <example>
            <para>// Setter:</para>
            <para>ExampleDeathRecord.COD1A = "Rupture of myocardium";</para>
            <para>// Getter:</para>
            <para>Console.WriteLine($"Cause: {ExampleDeathRecord.COD1A}");</para>
            </example>
        </member>
        <member name="P:FhirDeathRecord.DeathRecord.INTERVAL1A">
            <summary>Cause of Death Part I Interval, Line a.</summary>
            <value>the immediate cause of death approximate interval: onset to death.</value>
            <example>
            <para>// Setter:</para>
            <para>ExampleDeathRecord.INTERVAL1A = "Minutes";</para>
            <para>// Getter:</para>
            <para>Console.WriteLine($"Interval: {ExampleDeathRecord.INTERVAL1A}");</para>
            </example>
        </member>
        <member name="P:FhirDeathRecord.DeathRecord.CODE1A">
            <summary>Cause of Death Part I Code, Line a.</summary>
            <value>the immediate cause of death coding. A Dictionary representing a code, containing the following key/value pairs:
            <para>"code" - the code</para>
            <para>"system" - the code system this code belongs to</para>
            <para>"display" - a human readable meaning of the code</para>
            </value>
            <example>
            <para>// Setter:</para>
            <para>Dictionary&lt;string, string&gt; code = new Dictionary&lt;string, string&gt;();</para>
            <para>code.Add("code", "I21.0");</para>
            <para>code.Add("system", "http://hl7.org/fhir/sid/icd-10");</para>
            <para>code.Add("display", "Acute transmural myocardial infarction of anterior wall");</para>
            <para>ExampleDeathRecord.CODE1A = code;</para>
            <para>// Getter:</para>
            <para>Console.WriteLine($"\tCause of Death: {ExampleDeathRecord.CODE1A['display']}");</para>
            </example>
        </member>
        <member name="P:FhirDeathRecord.DeathRecord.COD1B">
            <summary>Cause of Death Part I, Line b.</summary>
            <value>the first underlying cause of death literal.</value>
            <example>
            <para>// Setter:</para>
            <para>ExampleDeathRecord.COD1B = "Acute myocardial infarction";</para>
            <para>// Getter:</para>
            <para>Console.WriteLine($"Cause: {ExampleDeathRecord.COD1B}");</para>
            </example>
        </member>
        <member name="P:FhirDeathRecord.DeathRecord.INTERVAL1B">
            <summary>Cause of Death Part I Interval, Line b.</summary>
            <value>the first underlying cause of death approximate interval: onset to death.</value>
            <example>
            <para>// Setter:</para>
            <para>ExampleDeathRecord.INTERVAL1B = "6 days";</para>
            <para>// Getter:</para>
            <para>Console.WriteLine($"Interval: {ExampleDeathRecord.INTERVAL1B}");</para>
            </example>
        </member>
        <member name="P:FhirDeathRecord.DeathRecord.CODE1B">
            <summary>Cause of Death Part I Code, Line b.</summary>
            <value>the first underlying cause of death coding. A Dictionary representing a code, containing the following key/value pairs:
            <para>"code" - the code</para>
            <para>"system" - the code system this code belongs to</para>
            <para>"display" - a human readable meaning of the code</para>
            </value>
            <example>
            <para>// Setter:</para>
            <para>Dictionary&lt;string, string&gt; code = new Dictionary&lt;string, string&gt;();</para>
            <para>code.Add("code", "I21.9");</para>
            <para>code.Add("system", "http://hl7.org/fhir/sid/icd-10");</para>
            <para>code.Add("display", "Acute myocardial infarction, unspecified");</para>
            <para>ExampleDeathRecord.CODE1B = code;</para>
            <para>// Getter:</para>
            <para>Console.WriteLine($"\tCause of Death: {ExampleDeathRecord.CODE1B['display']}");</para>
            </example>
        </member>
        <member name="P:FhirDeathRecord.DeathRecord.COD1C">
            <summary>Cause of Death Part I, Line c.</summary>
            <value>the second underlying cause of death literal.</value>
            <example>
            <para>// Setter:</para>
            <para>ExampleDeathRecord.COD1C = "Coronary artery thrombosis";</para>
            <para>// Getter:</para>
            <para>Console.WriteLine($"Cause: {ExampleDeathRecord.COD1C}");</para>
            </example>
        </member>
        <member name="P:FhirDeathRecord.DeathRecord.INTERVAL1C">
            <summary>Cause of Death Part I Interval, Line c.</summary>
            <value>the second underlying cause of death approximate interval: onset to death.</value>
            <example>
            <para>// Setter:</para>
            <para>ExampleDeathRecord.INTERVAL1C = "5 years";</para>
            <para>// Getter:</para>
            <para>Console.WriteLine($"Interval: {ExampleDeathRecord.INTERVAL1C}");</para>
            </example>
        </member>
        <member name="P:FhirDeathRecord.DeathRecord.CODE1C">
            <summary>Cause of Death Part I Code, Line c.</summary>
            <value>the second underlying cause of death coding. A Dictionary representing a code, containing the following key/value pairs:
            <para>"code" - the code</para>
            <para>"system" - the code system this code belongs to</para>
            <para>"display" - a human readable meaning of the code</para>
            </value>
            <example>
            <para>// Setter:</para>
            <para>Dictionary&lt;string, string&gt; code = new Dictionary&lt;string, string&gt;();</para>
            <para>code.Add("code", "I21.9");</para>
            <para>code.Add("system", "http://hl7.org/fhir/sid/icd-10");</para>
            <para>code.Add("display", "Acute myocardial infarction, unspecified");</para>
            <para>ExampleDeathRecord.CODE1C = code;</para>
            <para>// Getter:</para>
            <para>Console.WriteLine($"\tCause of Death: {ExampleDeathRecord.CODE1C['display']}");</para>
            </example>
        </member>
        <member name="P:FhirDeathRecord.DeathRecord.COD1D">
            <summary>Cause of Death Part I, Line d.</summary>
            <value>the third underlying cause of death literal.</value>
            <example>
            <para>// Setter:</para>
            <para>ExampleDeathRecord.COD1D = "Atherosclerotic coronary artery disease";</para>
            <para>// Getter:</para>
            <para>Console.WriteLine($"Cause: {ExampleDeathRecord.COD1D}");</para>
            </example>
        </member>
        <member name="P:FhirDeathRecord.DeathRecord.INTERVAL1D">
            <summary>Cause of Death Part I Interval, Line d.</summary>
            <value>the third underlying cause of death approximate interval: onset to death.</value>
            <example>
            <para>// Setter:</para>
            <para>ExampleDeathRecord.INTERVAL1D = "7 years";</para>
            <para>// Getter:</para>
            <para>Console.WriteLine($"Interval: {ExampleDeathRecord.INTERVAL1D}");</para>
            </example>
        </member>
        <member name="P:FhirDeathRecord.DeathRecord.CODE1D">
            <summary>Cause of Death Part I Code, Line d.</summary>
            <value>the third underlying cause of death coding. A Dictionary representing a code, containing the following key/value pairs:
            <para>"code" - the code</para>
            <para>"system" - the code system this code belongs to</para>
            <para>"display" - a human readable meaning of the code</para>
            </value>
            <example>
            <para>// Setter:</para>
            <para>Dictionary&lt;string, string&gt; code = new Dictionary&lt;string, string&gt;();</para>
            <para>code.Add("code", "I21.9");</para>
            <para>code.Add("system", "http://hl7.org/fhir/sid/icd-10");</para>
            <para>code.Add("display", "Acute myocardial infarction, unspecified");</para>
            <para>ExampleDeathRecord.CODE1D = code;</para>
            <para>// Getter:</para>
            <para>Console.WriteLine($"\tCause of Death: {ExampleDeathRecord.CODE1D['display']}");</para>
            </example>
        </member>
        <member name="P:FhirDeathRecord.DeathRecord.GivenNames">
            <summary>Decedent's Given Name(s). Middle name should be the last entry.</summary>
            <value>the decedent's name (first, etc., middle)</value>
            <example>
            <para>// Setter:</para>
            <para>string[] names = { "Example", "Something", "Middle" };</para>
            <para>ExampleDeathRecord.GivenNames = names;</para>
            <para>// Getter:</para>
            <para>Console.WriteLine($"Decedent Given Name(s): {string.Join(", ", ExampleDeathRecord.GivenNames)}");</para>
            </example>
        </member>
        <member name="P:FhirDeathRecord.DeathRecord.FamilyName">
            <summary>Decedent's Family Name.</summary>
            <value>the decedent's family name (i.e. last name)</value>
            <example>
            <para>// Setter:</para>
            <para>ExampleDeathRecord.FamilyName = "Last";</para>
            <para>// Getter:</para>
            <para>Console.WriteLine($"Decedent's Last Name: {ExampleDeathRecord.FamilyName}");</para>
            </example>
        </member>
        <member name="P:FhirDeathRecord.DeathRecord.Suffix">
            <summary>Decedent's Suffix.</summary>
            <value>the decedent's suffix</value>
            <example>
            <para>// Setter:</para>
            <para>ExampleDeathRecord.Suffix = "Jr.";</para>
            <para>// Getter:</para>
            <para>Console.WriteLine($"Decedent Suffix: {ExampleDeathRecord.Suffix}");</para>
            </example>
        </member>
        <member name="P:FhirDeathRecord.DeathRecord.Gender">
            <summary>Decedent's Gender.</summary>
            <value>the decedent's gender</value>
            <example>
            <para>// Setter:</para>
            <para>ExampleDeathRecord.Gender = "female";</para>
            <para>// Getter:</para>
            <para>Console.WriteLine($"Gender: {ExampleDeathRecord.Gender}");</para>
            </example>
        </member>
        <member name="P:FhirDeathRecord.DeathRecord.BirthSex">
            <summary>Decedent's Birth Sex.</summary>
            <value>the decedent's birth sex A Dictionary representing a code, containing the following key/value pairs:
            <para>"code" - the code</para>
            <para>"system" - the code system this code belongs to</para>
            <para>"display" - a human readable meaning of the code</para>
            </value>
            <example>
            <para>// Setter:</para>
            <para>Dictionary&lt;string, string&gt; code = new Dictionary&lt;string, string&gt;();</para>
            <para>code.Add("code", "M");</para>
            <para>code.Add("system", "http://hl7.org/fhir/us/core/ValueSet/us-core-birthsex");</para>
            <para>code.Add("display", "Male");</para>
            <para>ExampleDeathRecord.BirthSex = code;</para>
            <para>// Getter:</para>
            <para>Console.WriteLine($"Birth Sex: {ExampleDeathRecord.BirthSex}");</para>
            </example>
        </member>
        <member name="P:FhirDeathRecord.DeathRecord.DateOfBirth">
            <summary>Decedent's Date of Birth.</summary>
            <value>the decedent's date of birth</value>
            <example>
            <para>// Setter:</para>
            <para>ExampleDeathRecord.DateOfBirth = "1940-02-19T16:48:06.4988220-05:00";</para>
            <para>// Getter:</para>
            <para>Console.WriteLine($"Decedent Date of Birth: {ExampleDeathRecord.DateOfBirth}");</para>
            </example>
        </member>
        <member name="P:FhirDeathRecord.DeathRecord.Residence">
            <summary>Decedent's residence.</summary>
            <value>Decedent's residence. A Dictionary representing residence address, containing the following key/value pairs:
            <para>"addressLine1" - address, line one</para>
            <para>"addressLine2" - address, line two</para>
            <para>"addressCity" - address, city</para>
            <para>"addressCounty" - address, county</para>
            <para>"addressState" - address, state</para>
            <para>"addressZip" - address, zip</para>
            <para>"addressCountry" - address, country</para>
            </value>
            <example>
            <para>// Setter:</para>
            <para>Dictionary&lt;string, string&gt; address = new Dictionary&lt;string, string&gt;();</para>
            <para>address.Add("addressLine1", "123 Test Street");</para>
            <para>address.Add("addressLine2", "Unit 3");</para>
            <para>address.Add("addressCity", "Boston");</para>
            <para>address.Add("addressCounty", "Suffolk");</para>
            <para>address.Add("addressState", "Massachusetts");</para>
            <para>address.Add("addressZip", "12345");</para>
            <para>address.Add("addressCountry", "United States");</para>
            <para>SetterDeathRecord.Residence = address;</para>
            <para>// Getter:</para>
            <para>Console.WriteLine($"State of residence: {ExampleDeathRecord.Residence["addressState"]}");</para>
            </example>
        </member>
        <member name="P:FhirDeathRecord.DeathRecord.SSN">
            <summary>Decedent's Social Security Number.</summary>
            <value>the decedent's social security number, without dashes.</value>
            <example>
            <para>// Setter:</para>
            <para>ExampleDeathRecord.SSN = "12345678";</para>
            <para>// Getter:</para>
            <para>Console.WriteLine($"Decedent Suffix: {ExampleDeathRecord.SSN}");</para>
            </example>
        </member>
        <member name="P:FhirDeathRecord.DeathRecord.Ethnicity">
            <summary>Decedent's Ethnicity.</summary>
            <value>the decedent's ethnicity. An array of tuples, where the first value of each tuple is the display value, and the second is
            the code.</value>
            <example>
            <para>// Setter:</para>
            <para>Tuple&lt;string, string&gt;[] ethnicity = { Tuple.Create("Non Hispanic or Latino", "2186-5"), Tuple.Create("Salvadoran", "2161-8") };</para>
            <para>ExampleDeathRecord.Ethnicity = ethnicity;</para>
            <para>// Getter:</para>
            <para>foreach(var pair in deathRecord.Ethnicity)</para>
            <para>{</para>
            <para>  Console.WriteLine($"\tEthnicity text: {pair.Key}: code: {pair.Value}");</para>
            <para>};</para>
            </example>
        </member>
        <member name="P:FhirDeathRecord.DeathRecord.Race">
            <summary>Decedent's Race.</summary>
            <value>the decedent's race. An array of tuples, where the first value of each tuple is the display value, and the second is
            the code.</value>
            <example>
            <para>// Setter:</para>
            <para>Tuple&lt;string, string&gt;[] race = { Tuple.Create("Non Hispanic or Latino", "2186-5"), Tuple.Create("Salvadoran", "2161-8") };</para>
            <para>ExampleDeathRecord.Race = race;</para>
            <para>// Getter:</para>
            <para>foreach(var pair in ExampleDeathRecord.race)</para>
            <para>{</para>
            <para>   Console.WriteLine($"\Race text: {pair.Key}: code: {pair.Value}");</para>
            <para>};</para>
            </example>
        </member>
        <member name="P:FhirDeathRecord.DeathRecord.PlaceOfBirth">
            <summary>Decedent's Place Of Birth.</summary>
            <value>decedent's Place Of Birth. A Dictionary representing residence address, containing the following key/value pairs:
            <para>"addressLine1" - address, line one</para>
            <para>"addressLine2" - address, line two</para>
            <para>"addressCity" - address, city</para>
            <para>"addressCounty" - address, county</para>
            <para>"addressState" - address, state</para>
            <para>"addressZip" - address, zip</para>
            <para>"addressCountry" - address, country</para>
            </value>
            <example>
            <para>// Setter:</para>
            <para>Dictionary&lt;string, string&gt; address = new Dictionary&lt;string, string&gt;();</para>
            <para>address.Add("addressLine1", "123 Test Street");</para>
            <para>address.Add("addressLine2", "Unit 3");</para>
            <para>address.Add("addressCity", "Boston");</para>
            <para>address.Add("addressCounty", "Suffolk");</para>
            <para>address.Add("addressState", "Massachusetts");</para>
            <para>address.Add("addressZip", "12345");</para>
            <para>address.Add("addressCountry", "United States");</para>
            <para>SetterDeathRecord.PlaceOfBirth = address;</para>
            <para>// Getter:</para>
            <para>Console.WriteLine($"State where decedent was born: {ExampleDeathRecord.PlaceOfBirth["placeOfBirthState"]}");</para>
            </example>
        </member>
        <member name="P:FhirDeathRecord.DeathRecord.MaritalStatus">
            <summary>The marital status of the decedent at the time of death.</summary>
            <value>the marital status of the decedent at the time of death. A Dictionary representing a code, containing the following key/value pairs:
            <para>"code" - the code describing this finding</para>
            <para>"system" - the system the given code belongs to</para>
            <para>"display" - the human readable display text that corresponds to the given code</para>
            </value>
            <example>
            <para>// Setter:</para>
            <para>Dictionary&lt;string, string&gt; code = new Dictionary&lt;string, string&gt;();</para>
            <para>code.Add("code", "S");</para>
            <para>code.Add("system", "http://hl7.org/fhir/v3/MaritalStatus");</para>
            <para>code.Add("display", "Never Married");</para>
            <para>ExampleDeathRecord.MaritalStatus = code;</para>
            <para>// Getter:</para>
            <para>Console.WriteLine($"Marital status: {ExampleDeathRecord.MaritalStatus["display"]}");</para>
            </example>
        </member>
        <member name="P:FhirDeathRecord.DeathRecord.FatherGivenNames">
            <summary>Given name(s) of decedent's father.</summary>
            <value>the decedent's father's name (first, middle, etc.)</value>
            <example>
            <para>// Setter:</para>
            <para>string[] names = { "Dad", "Middle" };</para>
            <para>ExampleDeathRecord.FatherGivenNames = names;</para>
            <para>// Getter:</para>
            <para>Console.WriteLine($"Father Given Name(s): {string.Join(", ", ExampleDeathRecord.FatherGivenNames)}");</para>
            </example>
        </member>
        <member name="P:FhirDeathRecord.DeathRecord.FatherFamilyName">
            <summary>Family name of decedent's father.</summary>
            <value>the decedent's father's family name (i.e. last name)</value>
            <example>
            <para>// Setter:</para>
            <para>ExampleDeathRecord.FatherFamilyName = "Last";</para>
            <para>// Getter:</para>
            <para>Console.WriteLine($"Father's Last Name: {ExampleDeathRecord.FatherFamilyName}");</para>
            </example>
        </member>
        <member name="P:FhirDeathRecord.DeathRecord.FatherSuffix">
            <summary>Father's Suffix.</summary>
            <value>the decedent's father's suffix</value>
            <example>
            <para>// Setter:</para>
            <para>ExampleDeathRecord.FatherSuffix = "Jr.";</para>
            <para>// Getter:</para>
            <para>Console.WriteLine($"Father Suffix: {ExampleDeathRecord.FatherSuffix}");</para>
            </example>
        </member>
        <member name="P:FhirDeathRecord.DeathRecord.MotherGivenNames">
            <summary>Given name(s) of decedent's mother.</summary>
            <value>the decedent's mother's name (first, middle, etc.)</value>
            <example>
            <para>// Setter:</para>
            <para>string[] names = { "Mom", "Middle" };</para>
            <para>ExampleDeathRecord.MotherGivenNames = names;</para>
            <para>// Getter:</para>
            <para>Console.WriteLine($"Mother Given Name(s): {string.Join(", ", ExampleDeathRecord.MotherGivenNames)}");</para>
            </example>
        </member>
        <member name="P:FhirDeathRecord.DeathRecord.MotherMaidenName">
            <summary>Maiden name of decedent's mother.</summary>
            <value>the decedent's mother's maiden name (i.e. last name before marriage)</value>
            <example>
            <para>// Setter:</para>
            <para>ExampleDeathRecord.MotherMaidenName = "Last";</para>
            <para>// Getter:</para>
            <para>Console.WriteLine($"Mother's Maiden Name: {ExampleDeathRecord.MotherMaidenName}");</para>
            </example>
        </member>
        <member name="P:FhirDeathRecord.DeathRecord.MotherSuffix">
            <summary>Mother's Suffix.</summary>
            <value>the decedent's mother's suffix</value>
            <example>
            <para>// Setter:</para>
            <para>ExampleDeathRecord.MotherSuffix = "Jr.";</para>
            <para>// Getter:</para>
            <para>Console.WriteLine($"Mother Suffix: {ExampleDeathRecord.MotherSuffix}");</para>
            </example>
        </member>
        <member name="P:FhirDeathRecord.DeathRecord.SpouseGivenNames">
            <summary>Given name(s) of decedent's spouse.</summary>
            <value>the decedent's spouse's name (first, middle, etc.)</value>
            <example>
            <para>// Setter:</para>
            <para>string[] names = { "Spouse", "Middle" };</para>
            <para>ExampleDeathRecord.SpouseGivenNames = names;</para>
            <para>// Getter:</para>
            <para>Console.WriteLine($"Spouse Given Name(s): {string.Join(", ", ExampleDeathRecord.SpouseGivenNames)}");</para>
            </example>
        </member>
        <member name="P:FhirDeathRecord.DeathRecord.SpouseFamilyName">
            <summary>Family name of decedent's spouse.</summary>
            <value>the decedent's spouse's family name (i.e. last name)</value>
            <example>
            <para>// Setter:</para>
            <para>ExampleDeathRecord.SpouseFamilyName = "Last";</para>
            <para>// Getter:</para>
            <para>Console.WriteLine($"Spouse's Last Name: {ExampleDeathRecord.SpouseFamilyName}");</para>
            </example>
        </member>
        <member name="P:FhirDeathRecord.DeathRecord.SpouseSuffix">
            <summary>Spouse's Suffix.</summary>
            <value>the decedent's spouse's suffix</value>
            <example>
            <para>// Setter:</para>
            <para>ExampleDeathRecord.SpouseSuffix = "Jr.";</para>
            <para>// Getter:</para>
            <para>Console.WriteLine($"Spouse Suffix: {ExampleDeathRecord.SpouseSuffix}");</para>
            </example>
        </member>
        <member name="P:FhirDeathRecord.DeathRecord.EducationLevel">
            <summary>Decedent's Education Level.</summary>
            <value>the decedent's education level. A Dictionary representing a code, containing the following key/value pairs:
            <para>"code" - the code</para>
            <para>"system" - the code system this code belongs to</para>
            <para>"display" - a human readable meaning of the code</para>
            </value>
            <example>
            <para>// Setter:</para>
            <para>Dictionary&lt;string, string&gt; elevel = new Dictionary&lt;string, string&gt;();</para>
            <para>elevel.Add("code", "BD");</para>
            <para>elevel.Add("system", "http://hl7.org/fhir/v3/EducationLevel");</para>
            <para>elevel.Add("display", "College or baccalaureate degree complete");</para>
            <para>ExampleDeathRecord.EducationLevel = elevel;</para>
            <para>// Getter:</para>
            <para>Console.WriteLine($"Education Level: {ExampleDeathRecord.EducationLevel['display']}");</para>
            </example>
        </member>
        <member name="P:FhirDeathRecord.DeathRecord.BirthRecordId">
            <summary>Birth Record Identifier.</summary>
            <value>a birth record identification string.</value>
            <example>
            <para>// Setter:</para>
            <para>ExampleDeathRecord.BirthRecordId = "4242123";</para>
            <para>// Getter:</para>
            <para>Console.WriteLine($"Birth Record identification: {ExampleDeathRecord.BirthRecordId}");</para>
            </example>
        </member>
        <member name="P:FhirDeathRecord.DeathRecord.UsualOccupation">
            <summary>Decedent's Usual Occupation.</summary>
            <value>the decedent's usual occupation. A Dictionary representing a code, containing the following key/value pairs:
            <para>"code" - the code</para>
            <para>"system" - the code system this code belongs to</para>
            <para>"display" - a human readable meaning of the code</para>
            </value>
            <example>
            <para>// Setter:</para>
            <para>Dictionary&lt;string, string&gt; uocc = new Dictionary&lt;string, string&gt;();</para>
            <para>uocc.Add("code", "7280");</para>
            <para>uocc.Add("system", "http://www.hl7.org/fhir/ValueSet/Usual-occupation");</para>
            <para>uocc.Add("display", "Accounting, tax preparation, bookkeeping, and payroll services");</para>
            <para>ExampleDeathRecord.UsualOccupation = uocc;</para>
            <para>// Getter:</para>
            <para>Console.WriteLine($"Usual Occupation: {ExampleDeathRecord.UsualOccupation['display']}");</para>
            </example>
        </member>
        <member name="P:FhirDeathRecord.DeathRecord.UsualIndustry">
            <summary>Decedent's Usual Industry.</summary>
            <value>the decedent's usual industry. A Dictionary representing a code, containing the following key/value pairs:
            <para>"code" - the code</para>
            <para>"system" - the code system this code belongs to</para>
            <para>"display" - a human readable meaning of the code</para>
            </value>
            <example>
            <para>// Setter:</para>
            <para>Dictionary&lt;string, string&gt; uind = new Dictionary&lt;string, string&gt;();</para>
            <para>uind.Add("code", "1320");</para>
            <para>uind.Add("system", "http://www.hl7.org/fhir/ValueSet/industry-cdc-census-2010");</para>
            <para>uind.Add("display", "Aerospace engineers");</para>
            <para>ExampleDeathRecord.UsualIndustry = uind;</para>
            <para>// Getter:</para>
            <para>Console.WriteLine($"Usual Industry: {ExampleDeathRecord.UsualIndustry['display']}");</para>
            </example>
        </member>
        <member name="P:FhirDeathRecord.DeathRecord.MilitaryService">
            <summary>Decedent's Military Service.</summary>
            <value>the decedent's military service. A Dictionary representing a code, containing the following key/value pairs:
            <para>"code" - the code</para>
            <para>"system" - the code system this code belongs to</para>
            <para>"display" - a human readable meaning of the code</para>
            </value>
            <example>
            <para>// Setter:</para>
            <para>Dictionary&lt;string, string&gt; mserv = new Dictionary&lt;string, string&gt;();</para>
            <para>mserv.Add("code", "Y");</para>
            <para>mserv.Add("system", "http://www.hl7.org/fhir/ValueSet/v2-0532");</para>
            <para>mserv.Add("display", "Yes");</para>
            <para>ExampleDeathRecord.MilitaryService = uind;</para>
            <para>// Getter:</para>
            <para>Console.WriteLine($"Military Service: {ExampleDeathRecord.MilitaryService['display']}");</para>
            </example>
        </member>
        <member name="P:FhirDeathRecord.DeathRecord.MorticianGivenNames">
            <summary>Given name(s) of mortician.</summary>
            <value>the mortician's name (first, middle, etc.)</value>
            <example>
            <para>// Setter:</para>
            <para>string[] names = { "FD", "Middle" };</para>
            <para>ExampleDeathRecord.MorticianGivenNames = names;</para>
            <para>// Getter:</para>
            <para>Console.WriteLine($"Mortician Given Name(s): {string.Join(", ", ExampleDeathRecord.MorticianGivenNames)}");</para>
            </example>
        </member>
        <member name="P:FhirDeathRecord.DeathRecord.MorticianFamilyName">
            <summary>Family name of mortician.</summary>
            <value>the mortician's family name (i.e. last name)</value>
            <example>
            <para>// Setter:</para>
            <para>ExampleDeathRecord.MorticianFamilyName = "Last";</para>
            <para>// Getter:</para>
            <para>Console.WriteLine($"Mortician's Last Name: {ExampleDeathRecord.MorticianFamilyName}");</para>
            </example>
        </member>
        <member name="P:FhirDeathRecord.DeathRecord.MorticianSuffix">
            <summary>Mortician's Suffix.</summary>
            <value>the mortician's suffix</value>
            <example>
            <para>// Setter:</para>
            <para>ExampleDeathRecord.MorticianSuffix = "Jr.";</para>
            <para>// Getter:</para>
            <para>Console.WriteLine($"Mortician Suffix: {ExampleDeathRecord.MorticianSuffix}");</para>
            </example>
        </member>
        <member name="P:FhirDeathRecord.DeathRecord.MorticianIdentifier">
            <summary>Mortician Identifier.</summary>
            <value>the mortician's identifier</value>
            <example>
            <para>// Setter:</para>
            <para>ExampleDeathRecord.MorticianIdentifier = "9876543210";</para>
            <para>// Getter:</para>
            <para>Console.WriteLine($"Mortician Identifier: {ExampleDeathRecord.MorticianIdentifier}");</para>
            </example>
        </member>
        <member name="P:FhirDeathRecord.DeathRecord.FuneralHomeAddress">
            <summary>Funeral Home Address.</summary>
            <value>the funeral home address. A Dictionary representing an address, containing the following key/value pairs:
            <para>"addressLine1" - address, line one</para>
            <para>"addressLine2" - address, line two</para>
            <para>"addressCity" - address, city</para>
            <para>"addressCounty" - address, county</para>
            <para>"addressState" - address, state</para>
            <para>"addressZip" - address, zip</para>
            <para>"addressCountry" - address, country</para>
            </value>
            <example>
            <para>// Setter:</para>
            <para>Dictionary&lt;string, string&gt; address = new Dictionary&lt;string, string&gt;();</para>
            <para>address.Add("addressLine1", "1234 Test Street");</para>
            <para>address.Add("addressLine2", "Unit 3");</para>
            <para>address.Add("addressCity", "Boston");</para>
            <para>address.Add("addressCounty", "Suffolk");</para>
            <para>address.Add("addressState", "Massachusetts");</para>
            <para>address.Add("addressZip", "12345");</para>
            <para>address.Add("addressCountry", "United States");</para>
            <para>ExampleDeathRecord.FuneralHomeAddress = address;</para>
            <para>// Getter:</para>
            <para>foreach(var pair in ExampleDeathRecord.FuneralHomeAddress)</para>
            <para>{</para>
            <para>  Console.WriteLine($"\FuneralHomeAddress key: {pair.Key}: value: {pair.Value}");</para>
            <para>};</para>
            </example>
        </member>
        <member name="P:FhirDeathRecord.DeathRecord.FuneralHomeName">
            <summary>Name of Funeral Home.</summary>
            <value>the funeral home name.</value>
            <example>
            <para>// Setter:</para>
            <para>ExampleDeathRecord.FuneralHomeName = "Smith Funeral Home";</para>
            <para>// Getter:</para>
            <para>Console.WriteLine($"Funeral Home Name: {ExampleDeathRecord.FuneralHomeName}");</para>
            </example>
        </member>
        <member name="P:FhirDeathRecord.DeathRecord.DispositionLocationAddress">
            <summary>Disposition Location Address.</summary>
            <value>the disposition location address. A Dictionary representing an address, containing the following key/value pairs:
            <para>"addressLine1" - address, line one</para>
            <para>"addressLine2" - address, line two</para>
            <para>"addressCity" - address, city</para>
            <para>"addressCounty" - address, county</para>
            <para>"addressState" - address, state</para>
            <para>"addressZip" - address, zip</para>
            <para>"addressCountry" - address, country</para>
            </value>
            <example>
            <para>// Setter:</para>
            <para>Dictionary&lt;string, string&gt; address = new Dictionary&lt;string, string&gt;();</para>
            <para>address.Add("addressLine1", "1234 Test Street");</para>
            <para>address.Add("addressLine2", "Unit 3");</para>
            <para>address.Add("addressCity", "Boston");</para>
            <para>address.Add("addressCounty", "Suffolk");</para>
            <para>address.Add("addressState", "Massachusetts");</para>
            <para>address.Add("addressZip", "12345");</para>
            <para>address.Add("addressCountry", "United States");</para>
            <para>ExampleDeathRecord.DispositionLocationAddress = address;</para>
            <para>// Getter:</para>
            <para>foreach(var pair in ExampleDeathRecord.DispositionLocationAddress)</para>
            <para>{</para>
            <para>  Console.WriteLine($"\DispositionLocationAddress key: {pair.Key}: value: {pair.Value}");</para>
            <para>};</para>
            </example>
        </member>
        <member name="P:FhirDeathRecord.DeathRecord.DispositionLocationName">
            <summary>Name of Disposition Location.</summary>
            <value>the displosition location name.</value>
            <example>
            <para>// Setter:</para>
            <para>ExampleDeathRecord.DispositionLocationName = "Bedford Cemetery";</para>
            <para>// Getter:</para>
            <para>Console.WriteLine($"Disposition Location Name: {ExampleDeathRecord.DispositionLocationName}");</para>
            </example>
        </member>
        <member name="P:FhirDeathRecord.DeathRecord.DecedentDispositionMethod">
            <summary>Decedent's Disposition Method.</summary>
            <value>the decedent's disposition method. A Dictionary representing a code, containing the following key/value pairs:
            <para>"code" - the code</para>
            <para>"system" - the code system this code belongs to</para>
            <para>"display" - a human readable meaning of the code</para>
            </value>
            <example>
            <para>// Setter:</para>
            <para>Dictionary&lt;string, string&gt; dmethod = new Dictionary&lt;string, string&gt;();</para>
            <para>dmethod.Add("code", "449971000124106");</para>
            <para>dmethod.Add("system", "http://snomed.info/sct");</para>
            <para>dmethod.Add("display", "Burial");</para>
            <para>ExampleDeathRecord.DecedentDispositionMethod = dmethod;</para>
            <para>// Getter:</para>
            <para>Console.WriteLine($"Decedent Disposition Method: {ExampleDeathRecord.DecedentDispositionMethod['display']}");</para>
            </example>
        </member>
        <member name="P:FhirDeathRecord.DeathRecord.AutopsyPerformedIndicator">
            <summary>Autopsy Performed Indicator.</summary>
            <value>autopsy performed indicator. A Dictionary representing a code, containing the following key/value pairs:
            <para>"code" - the code</para>
            <para>"system" - the code system this code belongs to</para>
            <para>"display" - a human readable meaning of the code</para>
            </value>
            <example>
            <para>// Setter:</para>
            <para>Dictionary&lt;string, string&gt; code = new Dictionary&lt;string, string&gt;();</para>
            <para>code.Add("code", "Y");</para>
            <para>code.Add("system", "http://hl7.org/fhir/ValueSet/v2-0532");</para>
            <para>code.Add("display", "Yes");</para>
            <para>ExampleDeathRecord.AutopsyPerformedIndicator = code;</para>
            <para>// Getter:</para>
            <para>Console.WriteLine($"Autopsy Performed Indicator: {ExampleDeathRecord.AutopsyPerformedIndicator['display']}");</para>
            </example>
        </member>
        <member name="P:FhirDeathRecord.DeathRecord.DateOfDeath">
            <summary>Decedent's Date/Time of Death.</summary>
            <value>the decedent's date and time of death</value>
            <example>
            <para>// Setter:</para>
            <para>ExampleDeathRecord.DateOfDeath = "2018-02-19T16:48:06.4988220-05:00";</para>
            <para>// Getter:</para>
            <para>Console.WriteLine($"Decedent Date of Death: {ExampleDeathRecord.DateOfDeath}");</para>
            </example>
        </member>
        <member name="P:FhirDeathRecord.DeathRecord.DateOfDeathPronouncement">
            <summary>Decedent's Date/Time of Death Pronouncement.</summary>
            <value>the decedent's date and time of death pronouncement</value>
            <example>
            <para>// Setter:</para>
            <para>ExampleDeathRecord.DateOfDeathPronouncement = "2018-02-20T16:48:06.4988220-05:00";</para>
            <para>// Getter:</para>
            <para>Console.WriteLine($"Decedent Date of Death Pronouncement: {ExampleDeathRecord.DateOfDeathPronouncement}");</para>
            </example>
        </member>
        <member name="P:FhirDeathRecord.DeathRecord.AutopsyResultsAvailable">
            <summary>Autopsy Results Available.</summary>
            <value>autopsy results available. A Dictionary representing a code, containing the following key/value pairs:
            <para>"code" - the code</para>
            <para>"system" - the code system this code belongs to</para>
            <para>"display" - a human readable meaning of the code</para>
            </value>
            <example>
            <para>// Setter:</para>
            <para>Dictionary&lt;string, string&gt; code = new Dictionary&lt;string, string&gt;();</para>
            <para>code.Add("code", "Y");</para>
            <para>code.Add("system", "http://hl7.org/fhir/ValueSet/v2-0532");</para>
            <para>code.Add("display", "Yes");</para>
            <para>ExampleDeathRecord.AutopsyResultsAvailable = code;</para>
            <para>// Getter:</para>
            <para>Console.WriteLine($"Autopsy Results Available: {ExampleDeathRecord.AutopsyResultsAvailable['display']}");</para>
            </example>
        </member>
        <member name="P:FhirDeathRecord.DeathRecord.DeathLocationAddress">
            <summary>Location of Death.</summary>
            <value>location of death. A Dictionary representing an address, containing the following key/value pairs:
            <para>"addressLine1" - address, line one</para>
            <para>"addressLine2" - address, line two</para>
            <para>"addressCity" - address, city</para>
            <para>"addressCounty" - address, county</para>
            <para>"addressState" - address, state</para>
            <para>"addressZip" - address, zip</para>
            <para>"addressCountry" - address, country</para>
            </value>
            <example>
            <para>// Setter:</para>
            <para>Dictionary&lt;string, string&gt; address = new Dictionary&lt;string, string&gt;();</para>
            <para>address.Add("addressLine1", "123456789 Test Street");</para>
            <para>address.Add("addressLine2", "Unit 3");</para>
            <para>address.Add("addressCity", "Boston");</para>
            <para>address.Add("addressCounty", "Suffolk");</para>
            <para>address.Add("addressState", "Massachusetts");</para>
            <para>address.Add("addressZip", "12345");</para>
            <para>address.Add("addressCountry", "United States");</para>
            <para>ExampleDeathRecord.DeathLocationAddress = address;</para>
            <para>// Getter:</para>
            <para>foreach(var pair in ExampleDeathRecord.DeathLocationAddress)</para>
            <para>{</para>
            <para>  Console.WriteLine($"\DeathLocationAddress key: {pair.Key}: value: {pair.Value}");</para>
            <para>};</para>
            </example>
        </member>
        <member name="P:FhirDeathRecord.DeathRecord.DeathLocationName">
            <summary>Name of Death Location.</summary>
            <value>the death location name.</value>
            <example>
            <para>// Setter:</para>
            <para>ExampleDeathRecord.DeathLocationName = "Example Death Location Name";</para>
            <para>// Getter:</para>
            <para>Console.WriteLine($"Death Location Name: {ExampleDeathRecord.DeathLocationName}");</para>
            </example>
        </member>
        <member name="P:FhirDeathRecord.DeathRecord.DeathLocationDescription">
            <summary>Description of Death Location.</summary>
            <value>the death location description.</value>
            <example>
            <para>// Setter:</para>
            <para>ExampleDeathRecord.DeathLocationDescription = "Bedford Cemetery";</para>
            <para>// Getter:</para>
            <para>Console.WriteLine($"Death Location Description: {ExampleDeathRecord.DeathLocationDescription}");</para>
            </example>
        </member>
        <member name="P:FhirDeathRecord.DeathRecord.AgeAtDeath">
            <summary>Age At Death.</summary>
            <value>decedent's age at time of death. A Dictionary representing a length of time, containing the following key/value pairs:
            <para>"value" - the quantity value</para>
            <para>"system" - the quantity unit</para>
            </value>
            <example>
            <para>// Setter:</para>
            <para>Dictionary&lt;string, string&gt; age = new Dictionary&lt;string, string&gt;();</para>
            <para>age.Add("value", "100");</para>
            <para>age.Add("unit", "a"); // USE: http://www.hl7.org/fhir/stu3/valueset-age-units.html</para>
            <para>ExampleDeathRecord.AgeAtDeath = age;</para>
            <para>// Getter:</para>
            <para>Console.WriteLine($"Age At Death: {ExampleDeathRecord.AgeAtDeath['unit']} years");</para>
            </example>
        </member>
        <member name="P:FhirDeathRecord.DeathRecord.PregnanacyStatus">
            <summary>Pregnanacy Status At Death.</summary>
            <value>pregnanacy status at death. A Dictionary representing a code, containing the following key/value pairs:
            <para>"code" - the code</para>
            <para>"system" - the code system this code belongs to</para>
            <para>"display" - a human readable meaning of the code</para>
            </value>
            <example>
            <para>// Setter:</para>
            <para>Dictionary&lt;string, string&gt; code = new Dictionary&lt;string, string&gt;();</para>
            <para>code.Add("code", "PHC1260");</para>
            <para>code.Add("system", "http://www.hl7.org/fhir/stu3/valueset-PregnancyStatusVS");</para>
            <para>code.Add("display", "Not pregnant within past year");</para>
            <para>ExampleDeathRecord.PregnanacyStatus = code;</para>
            <para>// Getter:</para>
            <para>Console.WriteLine($"Pregnanacy Status: {ExampleDeathRecord.PregnanacyStatus['display']}");</para>
            </example>
        </member>
        <member name="P:FhirDeathRecord.DeathRecord.TransportationRole">
            <summary>Transportation Role in death.</summary>
            <value>transportation role in death. A Dictionary representing a code, containing the following key/value pairs:
            <para>"code" - the code</para>
            <para>"system" - the code system this code belongs to</para>
            <para>"display" - a human readable meaning of the code</para>
            </value>
            <example>
            <para>// Setter:</para>
            <para>Dictionary&lt;string, string&gt; code = new Dictionary&lt;string, string&gt;();</para>
            <para>code.Add("code", "example-code");</para>
            <para>code.Add("system", "http://www.hl7.org/fhir/stu3/valueset-TransportationRelationships");</para>
            <para>code.Add("display", "Example Code");</para>
            <para>ExampleDeathRecord.PregnanacyStatus = code;</para>
            <para>// Getter:</para>
            <para>Console.WriteLine($"Transportation Role: {ExampleDeathRecord.TransportationRole['display']}");</para>
            </example>
        </member>
        <member name="P:FhirDeathRecord.DeathRecord.ExaminerContacted">
            <summary>Examiner Contacted.</summary>
            <value>if a medical examiner was contacted.</value>
            <example>
            <para>// Setter:</para>
            <para>ExampleDeathRecord.ExaminerContacted = false;</para>
            <para>// Getter:</para>
            <para>Console.WriteLine($"Examiner Contacted: {ExampleDeathRecord.ExaminerContacted}");</para>
            </example>
        </member>
        <member name="P:FhirDeathRecord.DeathRecord.InjuryLocationAddress">
            <summary>Location of Injury.</summary>
            <value>location of injury. A Dictionary representing an address, containing the following key/value pairs:
            <para>"addressLine1" - address, line one</para>
            <para>"addressLine2" - address, line two</para>
            <para>"addressCity" - address, city</para>
            <para>"addressCounty" - address, county</para>
            <para>"addressState" - address, state</para>
            <para>"addressZip" - address, zip</para>
            <para>"addressCountry" - address, country</para>
            </value>
            <example>
            <para>// Setter:</para>
            <para>Dictionary&lt;string, string&gt; address = new Dictionary&lt;string, string&gt;();</para>
            <para>address.Add("addressLine1", "123456 Test Street");</para>
            <para>address.Add("addressLine2", "Unit 3");</para>
            <para>address.Add("addressCity", "Boston");</para>
            <para>address.Add("addressCounty", "Suffolk");</para>
            <para>address.Add("addressState", "Massachusetts");</para>
            <para>address.Add("addressZip", "12345");</para>
            <para>address.Add("addressCountry", "United States");</para>
            <para>ExampleDeathRecord.InjuryLocationAddress = address;</para>
            <para>// Getter:</para>
            <para>foreach(var pair in ExampleDeathRecord.InjuryLocationAddress)</para>
            <para>{</para>
            <para>  Console.WriteLine($"\InjuryLocationAddress key: {pair.Key}: value: {pair.Value}");</para>
            <para>};</para>
            </example>
        </member>
        <member name="P:FhirDeathRecord.DeathRecord.InjuryLocationName">
            <summary>Name of Injury Location.</summary>
            <value>the injury location name.</value>
            <example>
            <para>// Setter:</para>
            <para>ExampleDeathRecord.InjuryLocationName = "Bedford Cemetery";</para>
            <para>// Getter:</para>
            <para>Console.WriteLine($"Injury Location Name: {ExampleDeathRecord.InjuryLocationName}");</para>
            </example>
        </member>
        <member name="P:FhirDeathRecord.DeathRecord.InjuryLocationDescription">
            <summary>Description of Injury Location.</summary>
            <value>the injury location description.</value>
            <example>
            <para>// Setter:</para>
            <para>ExampleDeathRecord.InjuryLocationDescription = "Bedford Cemetery";</para>
            <para>// Getter:</para>
            <para>Console.WriteLine($"Injury Location Description: {ExampleDeathRecord.InjuryLocationDescription}");</para>
            </example>
        </member>
        <member name="P:FhirDeathRecord.DeathRecord.TobaccoUse">
            <summary>Tobacco Use Contributed To Death.</summary>
            <value>if tobacco use contributed to death. A Dictionary representing a code, containing the following key/value pairs:
            <para>"code" - the code</para>
            <para>"system" - the code system this code belongs to</para>
            <para>"display" - a human readable meaning of the code</para>
            </value>
            <example>
            <para>// Setter:</para>
            <para>Dictionary&lt;string, string&gt; code = new Dictionary&lt;string, string&gt;();</para>
            <para>code.Add("code", "Y");</para>
            <para>code.Add("system", "http://hl7.org/fhir/ValueSet/v2-0532");</para>
            <para>code.Add("display", "Yes");</para>
            <para>ExampleDeathRecord.TobaccoUse = code;</para>
            <para>// Getter:</para>
            <para>Console.WriteLine($"Tobacco Use: {ExampleDeathRecord.TobaccoUse['display']}");</para>
            </example>
        </member>
        <member name="M:FhirDeathRecord.DeathRecord.AddReferenceToComposition(System.String)">
            <summary>Add a reference to the Death Record Composition.</summary>
            <param name="reference">a reference.</param>
        </member>
        <member name="M:FhirDeathRecord.DeathRecord.RemoveReferenceFromComposition(System.String)">
            <summary>Remove a reference from the Death Record Composition.</summary>
            <param name="reference">a reference.</param>
        </member>
        <member name="M:FhirDeathRecord.DeathRecord.RestoreReferences">
            <summary>Restores class references from a newly parsed record.</summary>
        </member>
        <member name="M:FhirDeathRecord.DeathRecord.DictToCodeableConcept(System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>Convert a "code" dictionary to a FHIR CodableConcept.</summary>
            <param name="dict">represents a code.</param>
            <returns>the corresponding CodeableConcept representation of the code.</returns>
        </member>
        <member name="M:FhirDeathRecord.DeathRecord.CodeableConceptToDict(Hl7.Fhir.Model.CodeableConcept)">
            <summary>Convert a FHIR CodableConcept to a "code" Dictionary</summary>
            <param name="codeableConcept">a FHIR CodeableConcept.</param>
            <returns>the corresponding Dictionary representation of the code.</returns>
        </member>
        <member name="M:FhirDeathRecord.DeathRecord.DictToAddress(System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>Convert an "address" dictionary to a FHIR Address.</summary>
            <param name="dict">represents an address.</param>
            <returns>the corresponding FHIR Address representation of the address.</returns>
        </member>
        <member name="M:FhirDeathRecord.DeathRecord.AddressToDict(Hl7.Fhir.Model.Address)">
            <summary>Convert a FHIR Address to an "address" Dictionary</summary>
            <param name="addr">a FHIR Address.</param>
            <returns>the corresponding Dictionary representation of the FHIR Address.</returns>
        </member>
        <member name="M:FhirDeathRecord.DeathRecord.GetAll(System.String)">
            <summary>Given a FHIR path, return the elements that match the given path;
            returns an empty array if no matches are found.</summary>
            <param name="path">represents a FHIR path.</param>
            <returns>all elements that match the given path, or an empty array if no matches are found.</returns>
        </member>
        <member name="M:FhirDeathRecord.DeathRecord.GetFirst(System.String)">
            <summary>Given a FHIR path, return the first element that matches the given path.</summary>
            <param name="path">represents a FHIR path.</param>
            <returns>the first element that matches the given path, or null if no match is found.</returns>
        </member>
        <member name="M:FhirDeathRecord.DeathRecord.GetLast(System.String)">
            <summary>Given a FHIR path, return the last element that matches the given path.</summary>
            <param name="path">represents a FHIR path.</param>
            <returns>the last element that matches the given path, or null if no match is found.</returns>
        </member>
        <member name="M:FhirDeathRecord.DeathRecord.GetAllString(System.String)">
            <summary>Given a FHIR path, return the elements that match the given path as a string;
            returns an empty array if no matches are found.</summary>
            <param name="path">represents a FHIR path.</param>
            <returns>all elements that match the given path as a string, or an empty array if no matches are found.</returns>
        </member>
        <member name="M:FhirDeathRecord.DeathRecord.GetFirstString(System.String)">
            <summary>Given a FHIR path, return the first element that matches the given path as a string;
            returns an empty string if no match is found.</summary>
            <param name="path">represents a FHIR path.</param>
            <returns>the first element that matches the given path as a string, or null if no match is found.</returns>
        </member>
        <member name="M:FhirDeathRecord.DeathRecord.GetLastString(System.String)">
            <summary>Given a FHIR path, return the last element that matches the given path as a string;
            returns an empty string if no match is found.</summary>
            <param name="path">represents a FHIR path.</param>
            <returns>the last element that matches the given path as a string, or null if no match is found.</returns>
        </member>
        <member name="M:FhirDeathRecord.DeathRecord.GetValue(System.Collections.Generic.Dictionary{System.String,System.String},System.String)">
            <summary>Get a value from a Dictionary, but return null if the key doesn't exist.</summary>
        </member>
        <member name="M:FhirDeathRecord.DeathRecord.UpdateDictionary(System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>Combine the given dictionaries and return the combined result.</summary>
        </member>
        <member name="M:FhirDeathRecord.DeathRecord.ToDescription">
            <summary>Returns a JSON encoded structure that maps to the various property
            annotations found in the DeathRecord class. This is useful for scenarios
            where you may want to display the data in user interfaces.</summary>
            <returns>a string representation of this Death Record in a descriptive format.</returns>
        </member>
        <member name="M:FhirDeathRecord.DeathRecord.FromDescription(System.String)">
            <summary>Helper method to return a JSON string representation of this Death Record.</summary>
            <param name="contents">string that represents </param>
            <returns>a new DeathRecord that corresponds to the given descriptive format</returns>
        </member>
        <member name="T:FhirDeathRecord.Property">
            <summary>Property attribute used to describe a DeathRecord property.</summary>
        </member>
        <member name="T:FhirDeathRecord.Property.Types">
            <summary>Enum for describing the property type.</summary>
        </member>
        <member name="F:FhirDeathRecord.Property.Types.String">
            <summary>Parameter is a string.</summary>
        </member>
        <member name="F:FhirDeathRecord.Property.Types.StringArr">
            <summary>Parameter is an array of strings.</summary>
        </member>
        <member name="F:FhirDeathRecord.Property.Types.StringDateTime">
            <summary>Parameter is like a string, but should be treated as a date and time.</summary>
        </member>
        <member name="F:FhirDeathRecord.Property.Types.Bool">
            <summary>Parameter is a bool.</summary>
        </member>
        <member name="F:FhirDeathRecord.Property.Types.Dictionary">
            <summary>Parameter is a Dictionary.</summary>
        </member>
        <member name="F:FhirDeathRecord.Property.Types.TupleArr">
            <summary>Parameter is an array of Tuples.</summary>
        </member>
        <member name="F:FhirDeathRecord.Property.Types.TupleCOD">
            <summary>Parameter is an array of Tuples, specifically for CausesOfDeath.</summary>
        </member>
        <member name="F:FhirDeathRecord.Property.Name">
            <summary>Name of this property.</summary>
        </member>
        <member name="F:FhirDeathRecord.Property.Type">
            <summary>The property type (e.g. string, bool, Dictionary).</summary>
        </member>
        <member name="F:FhirDeathRecord.Property.Category">
            <summary>Category of this property.</summary>
        </member>
        <member name="F:FhirDeathRecord.Property.Description">
            <summary>Description of this property.</summary>
        </member>
        <member name="F:FhirDeathRecord.Property.Serialize">
            <summary>If this field should be kept when serialzing.</summary>
        </member>
        <member name="F:FhirDeathRecord.Property.IGUrl">
            <summary>URL that links to the IG description for this property.</summary>
        </member>
        <member name="F:FhirDeathRecord.Property.Priority">
            <summary>Priority that this should show up in generated lists. Lower numbers come first.</summary>
        </member>
        <member name="M:FhirDeathRecord.Property.#ctor(System.String,FhirDeathRecord.Property.Types,System.String,System.String,System.Boolean,System.String,System.Int32)">
            <summary>Constructor.</summary>
        </member>
        <member name="T:FhirDeathRecord.PropertyParam">
            <summary>Property attribute used to describe a DeathRecord property parameter,
            specifically if the property is a dictionary that has keys.</summary>
        </member>
        <member name="F:FhirDeathRecord.PropertyParam.Key">
            <summary>If the related property is a Dictionary, the key name.</summary>
        </member>
        <member name="F:FhirDeathRecord.PropertyParam.Description">
            <summary>Description of this parameter.</summary>
        </member>
        <member name="M:FhirDeathRecord.PropertyParam.#ctor(System.String,System.String)">
            <summary>Constructor.</summary>
        </member>
        <member name="T:FhirDeathRecord.FHIRPath">
            <summary>Describes a FHIR path that can be used to get to the element.</summary>
        </member>
        <member name="F:FhirDeathRecord.FHIRPath.Path">
            <summary>The relevant FHIR path.</summary>
        </member>
        <member name="F:FhirDeathRecord.FHIRPath.Element">
            <summary>The relevant element.</summary>
        </member>
        <member name="M:FhirDeathRecord.FHIRPath.#ctor(System.String,System.String)">
            <summary>Constructor.</summary>
        </member>
        <member name="T:FhirDeathRecord.IJEField">
            <summary>Property attribute used to describe a field in the IJE Mortality format.</summary>
        </member>
        <member name="F:FhirDeathRecord.IJEField.Field">
            <summary>Field number.</summary>
        </member>
        <member name="F:FhirDeathRecord.IJEField.Location">
            <summary>Beggining location.</summary>
        </member>
        <member name="F:FhirDeathRecord.IJEField.Length">
            <summary>Field length.</summary>
        </member>
        <member name="F:FhirDeathRecord.IJEField.Contents">
            <summary>Description of what the field contains.</summary>
        </member>
        <member name="F:FhirDeathRecord.IJEField.Name">
            <summary>Field name.</summary>
        </member>
        <member name="F:FhirDeathRecord.IJEField.Priority">
            <summary>Priority - lower will be "GET" and "SET" earlier.</summary>
        </member>
        <member name="M:FhirDeathRecord.IJEField.#ctor(System.Int32,System.Int32,System.Int32,System.String,System.String,System.Int32)">
            <summary>Constructor.</summary>
        </member>
        <member name="T:FhirDeathRecord.IJEMortality">
            <summary>A "wrapper" class to convert between a FHIR based <c>DeathRecord</c> and
            a record in IJE Mortality format. Each property of this class corresponds exactly
            with a field in the IJE Mortality format. The getters convert from the embedded
            FHIR based <c>DeathRecord</c> to the IJE format for a specific field, and
            the setters convert from IJE format for a specific field and set that value
            on the embedded FHIR based <c>DeathRecord</c>.</summary>
        </member>
        <member name="F:FhirDeathRecord.IJEMortality.record">
            <summary>FHIR based death record.</summary>
        </member>
        <member name="F:FhirDeathRecord.IJEMortality.dataLookup">
            <summary>IJE data lookup helper. Thread-safe singleton!</summary>
        </member>
        <member name="M:FhirDeathRecord.IJEMortality.#ctor(FhirDeathRecord.DeathRecord)">
            <summary>Constructor that takes a <c>DeathRecord</c>.</summary>
        </member>
        <member name="M:FhirDeathRecord.IJEMortality.#ctor(System.String)">
            <summary>Constructor that takes an IJE string and builds a corresponding internal <c>DeathRecord</c>.</summary>
        </member>
        <member name="M:FhirDeathRecord.IJEMortality.ToString">
            <summary>Converts the internal <c>DeathRecord</c> into an IJE string.</summary>
        </member>
        <member name="M:FhirDeathRecord.IJEMortality.ToDeathRecord">
            <summary>Returns the corresponding <c>DeathRecord</c> for this IJE string.</summary>
        </member>
        <member name="T:FhirDeathRecord.MortalityData">
            <summary>Data helper class for dealing with IJE mortality data. Follows Singleton-esque pattern!</summary>
        </member>
        <member name="P:FhirDeathRecord.MortalityData.Instance">
            <summary>Instance get method for singleton.</summary>
        </member>
        <member name="M:FhirDeathRecord.MortalityData.StateNameToStateCode(System.String)">
            <summary>Given a State, Territory, or Province name - return the representative State code.</summary>
        </member>
        <member name="M:FhirDeathRecord.MortalityData.StateCodeToStateName(System.String)">
            <summary>Given a State, Territory, or Province code - return the representative State, Territory, or Province name.</summary>
        </member>
        <member name="M:FhirDeathRecord.MortalityData.CountryNameToCountryCode(System.String)">
            <summary>Given a Country name - return the representative Country code.</summary>
        </member>
        <member name="M:FhirDeathRecord.MortalityData.CountryCodeToCountryName(System.String)">
            <summary>Given a Country code - return the representative Country name.</summary>
        </member>
        <member name="M:FhirDeathRecord.MortalityData.StateNameAndCountyNameToCountyCode(System.String,System.String)">
            <summary>Given a State and County name - return the representative County code.</summary>
        </member>
        <member name="M:FhirDeathRecord.MortalityData.StateNameAndCountyCodeToCountyName(System.String,System.String)">
            <summary>Given a County code and a State name - return the representative County name.</summary>
        </member>
        <member name="M:FhirDeathRecord.MortalityData.StateNameAndCountyNameAndPlaceNameToPlaceCode(System.String,System.String,System.String)">
            <summary>Given a State, County, and Place name - return the representative Place code.</summary>
        </member>
        <member name="M:FhirDeathRecord.MortalityData.StateNameAndCountyNameAndPlaceCodeToPlaceName(System.String,System.String,System.String)">
            <summary>Given a State and County name, and a Place code - return the representative Place name.</summary>
        </member>
        <member name="M:FhirDeathRecord.MortalityData.StateCodeAndCityNameToCountyName(System.String,System.String)">
            <summary>Given a State and County name, and a Place code - return the representative Place name.</summary>
        </member>
        <member name="M:FhirDeathRecord.MortalityData.EthnicityNameToEthnicityCode(System.String)">
            <summary>Given an Ethnicity name - return the representative Ethnicity code.</summary>
        </member>
        <member name="M:FhirDeathRecord.MortalityData.EthnicityCodeToEthnicityName(System.String)">
            <summary>Given an Ethnicity code - return the representative Ethnicity name.</summary>
        </member>
        <member name="M:FhirDeathRecord.MortalityData.AIANRaceNameToRaceCode(System.String)">
            <summary>Given an American Indian or Alaska Native Race name - return the representative Race code.</summary>
        </member>
        <member name="M:FhirDeathRecord.MortalityData.AIANRaceCodeToRaceName(System.String)">
            <summary>Given an American Indian or Alaska Native Race code - return the representative Race name.</summary>
        </member>
        <member name="M:FhirDeathRecord.MortalityData.ARaceNameToRaceCode(System.String)">
            <summary>Given an Asian Race name - return the representative Race code.</summary>
        </member>
        <member name="M:FhirDeathRecord.MortalityData.ARaceCodeToRaceName(System.String)">
            <summary>Given an Asian Race code - return the representative Race name.</summary>
        </member>
        <member name="M:FhirDeathRecord.MortalityData.BAARaceNameToRaceCode(System.String)">
            <summary>Given a Black or African American Race name - return the representative Race code.</summary>
        </member>
        <member name="M:FhirDeathRecord.MortalityData.BAARaceCodeToRaceName(System.String)">
            <summary>Given a Black or African American Race code - return the representative Race name.</summary>
        </member>
        <member name="M:FhirDeathRecord.MortalityData.NHOPIRaceNameToRaceCode(System.String)">
            <summary>Given a Native Hawaiian or Other Pacific Islander Race name - return the representative Race code.</summary>
        </member>
        <member name="M:FhirDeathRecord.MortalityData.NHOPIRaceCodeToRaceName(System.String)">
            <summary>Given a Native Hawaiian or Other Pacific Islander Race code - return the representative Race name.</summary>
        </member>
        <member name="M:FhirDeathRecord.MortalityData.WRaceNameToRaceCode(System.String)">
            <summary>Given a White Race name - return the representative Race code.</summary>
        </member>
        <member name="M:FhirDeathRecord.MortalityData.WRaceCodeToRaceName(System.String)">
            <summary>Given a White Race code - return the representative Race name.</summary>
        </member>
        <member name="M:FhirDeathRecord.MortalityData.RaceNameToRaceCode(System.String)">
            <summary>Given a Race name - return the representative Race code.</summary>
        </member>
        <member name="M:FhirDeathRecord.MortalityData.RaceCodeToRaceName(System.String)">
            <summary>Given a Race code - return the representative Race name.</summary>
        </member>
        <member name="F:FhirDeathRecord.MortalityData.CDCRaceAIANCodes">
            <summary>CDC Race American Indian or Alaska Native Codes</summary>
        </member>
        <member name="F:FhirDeathRecord.MortalityData.CDCRaceACodes">
            <summary>CDC Race Asian Codes</summary>
        </member>
        <member name="F:FhirDeathRecord.MortalityData.CDCRaceBAACodes">
            <summary>CDC Race Black or African American Codes</summary>
        </member>
        <member name="F:FhirDeathRecord.MortalityData.CDCRaceNHOPICodes">
            <summary>CDC Race Native Hawaiian or Other Pacific Islander Codes</summary>
        </member>
        <member name="F:FhirDeathRecord.MortalityData.CDCRaceWCodes">
            <summary>CDC Race White Codes</summary>
        </member>
        <member name="F:FhirDeathRecord.MortalityData.CDCEthnicityCodes">
            <summary>CDC Ethnicity Codes</summary>
        </member>
        <member name="F:FhirDeathRecord.MortalityData.StateTerritoryProvinceCodes">
            <summary>State and Territory Province Codes</summary>
        </member>
        <member name="F:FhirDeathRecord.MortalityData.CountryCodes">
            <summary>Country Codes</summary>
        </member>
        <member name="F:FhirDeathRecord.MortalityData.PlaceCodes">
            <summary>Place Codes</summary>
        </member>
    </members>
</doc>
