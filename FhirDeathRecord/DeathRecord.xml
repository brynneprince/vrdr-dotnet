<?xml version="1.0"?>
<doc>
    <assembly>
        <name>DeathRecord</name>
    </assembly>
    <members>
        <member name="T:FhirDeathRecord.DeathRecord">
            <summary>Class <c>DeathRecord</c> models a FHIR Vital Records Death Reporting (VRDR) Death
            Record. This class was designed to help consume and produce death records that follow the
            HL7 FHIR Vital Records Death Reporting Implementation Guide, as described at:
            http://hl7.org/fhir/us/vrdr and https://github.com/hl7/vrdr.
            </summary>
        </member>
        <member name="F:FhirDeathRecord.DeathRecord.Navigator">
            <summary>Useful for navigating around the FHIR Bundle using FHIRPaths.</summary>
        </member>
        <member name="F:FhirDeathRecord.DeathRecord.Bundle">
            <summary>Bundle that contains the death record.</summary>
        </member>
        <member name="F:FhirDeathRecord.DeathRecord.Composition">
            <summary>Composition that described what the Bundle is, as well as keeping references to its contents.</summary>
        </member>
        <member name="F:FhirDeathRecord.DeathRecord.Decedent">
            <summary>The Decedent.</summary>
        </member>
        <member name="F:FhirDeathRecord.DeathRecord.Certifier">
            <summary>The Certifier.</summary>
        </member>
        <member name="F:FhirDeathRecord.DeathRecord.DeathCertification">
            <summary>The Certification.</summary>
        </member>
        <member name="F:FhirDeathRecord.DeathRecord.InterestedParty">
            <summary>The Interested Party.</summary>
        </member>
        <member name="F:FhirDeathRecord.DeathRecord.MannerOfDeath">
            <summary>The Manner of Death Observation.</summary>
        </member>
        <member name="F:FhirDeathRecord.DeathRecord.ConditionContributingToDeath">
            <summary>Condition Contributing to Death.</summary>
        </member>
        <member name="F:FhirDeathRecord.DeathRecord.CauseOfDeathConditionA">
            <summary>Cause Of Death Condition Line A.</summary>
        </member>
        <member name="F:FhirDeathRecord.DeathRecord.CauseOfDeathConditionB">
            <summary>Cause Of Death Condition Line B.</summary>
        </member>
        <member name="F:FhirDeathRecord.DeathRecord.CauseOfDeathConditionC">
            <summary>Cause Of Death Condition Line C.</summary>
        </member>
        <member name="F:FhirDeathRecord.DeathRecord.CauseOfDeathConditionD">
            <summary>Cause Of Death Condition Line D.</summary>
        </member>
        <member name="F:FhirDeathRecord.DeathRecord.CauseOfDeathConditionPathway">
            <summary>Cause Of Death Condition Pathway.</summary>
        </member>
        <member name="M:FhirDeathRecord.DeathRecord.#ctor">
            <summary>Default constructor that creates a new, empty FHIR SDR.</summary>
        </member>
        <member name="M:FhirDeathRecord.DeathRecord.#ctor(System.String,System.Boolean)">
            <summary>Constructor that takes a string that represents a FHIR SDR in either XML or JSON format.</summary>
            <param name="record">represents a FHIR SDR in either XML or JSON format.</param>
            <param name="permissive">if the parser should be permissive when parsing the given string</param>
            <exception cref="T:System.ArgumentException">Record is neither valid XML nor JSON.</exception>
        </member>
        <member name="M:FhirDeathRecord.DeathRecord.ToXML">
            <summary>Helper method to return a XML string representation of this Death Record.</summary>
            <returns>a string representation of this Death Record in XML format</returns>
        </member>
        <member name="M:FhirDeathRecord.DeathRecord.ToXml">
            <summary>Helper method to return a XML string representation of this Death Record.</summary>
            <returns>a string representation of this Death Record in XML format</returns>
        </member>
        <member name="M:FhirDeathRecord.DeathRecord.ToJSON">
            <summary>Helper method to return a JSON string representation of this Death Record.</summary>
            <returns>a string representation of this Death Record in JSON format</returns>
        </member>
        <member name="M:FhirDeathRecord.DeathRecord.ToJson">
            <summary>Helper method to return a JSON string representation of this Death Record.</summary>
            <returns>a string representation of this Death Record in JSON format</returns>
        </member>
        <member name="M:FhirDeathRecord.DeathRecord.GetITypedElement">
            <summary>Helper method to return an ITypedElement of the record bundle.</summary>
            <returns>an ITypedElement of the record bundle</returns>
        </member>
        <member name="P:FhirDeathRecord.DeathRecord.Identifier">
            <summary>Death Record Identifier.</summary>
            <value>a record identification string.</value>
            <example>
            <para>// Setter:</para>
            <para>ExampleDeathRecord.Identifier = "42";</para>
            <para>// Getter:</para>
            <para>Console.WriteLine($"Record identification: {ExampleDeathRecord.Identifier}");</para>
            </example>
        </member>
        <member name="P:FhirDeathRecord.DeathRecord.BundleIdentifier">
            <summary>Death Record Bundle Identifier.</summary>
            <value>a record bundle identification string.</value>
            <example>
            <para>// Setter:</para>
            <para>ExampleDeathRecord.BundleIdentifier = "42";</para>
            <para>// Getter:</para>
            <para>Console.WriteLine($"Record bundle identification: {ExampleDeathRecord.BundleIdentifier}");</para>
            </example>
        </member>
        <member name="P:FhirDeathRecord.DeathRecord.CertifiedTime">
            <summary>Certified time.</summary>
            <value>time when the record was certified.</value>
            <example>
            <para>// Setter:</para>
            <para>ExampleDeathRecord.CertifiedTime = "2019-01-29T16:48:06.4988220-05:00";</para>
            <para>// Getter:</para>
            <para>Console.WriteLine($"Certified at: {ExampleDeathRecord.CertifiedTime}");</para>
            </example>
        </member>
        <member name="P:FhirDeathRecord.DeathRecord.CreatedTime">
            <summary>Created time.</summary>
            <value>time when the record was created.</value>
            <example>
            <para>// Setter:</para>
            <para>ExampleDeathRecord.CreatedTime = "2019-01-29T16:48:06.4988220-05:00";</para>
            <para>// Getter:</para>
            <para>Console.WriteLine($"Created at: {ExampleDeathRecord.CreatedTime}");</para>
            </example>
        </member>
        <member name="P:FhirDeathRecord.DeathRecord.CertifierRole">
            <summary>Certifier Role (see http://www.hl7.org/fhir/stu3/valueset-Performer-role.html).</summary>
            <value>the certifier role</value>
            <example>
            <para>// Setter:</para>
            <para>Dictionary&lt;string, string&gt; role = new Dictionary&lt;string, string&gt;();</para>
            <para>role.Add("code", "309343006");</para>
            <para>role.Add("system", "http://snomed.info/sct");</para>
            <para>role.Add("display", "Physician");</para>
            <para>ExampleDeathRecord.CertifierRole = role;</para>
            <para>// Getter:</para>
            <para>Console.WriteLine($"Certifier Role: {ExampleDeathRecord.CertifierRole['display']}");</para>
            </example>
        </member>
        <member name="P:FhirDeathRecord.DeathRecord.InterestedPartyIdentifier">
            <summary>Interested Party Identifier.</summary>
            <value>an interested party identification string.</value>
            <example>
            <para>// Setter:</para>
            <para>ExampleDeathRecord.InterestedPartyIdentifier = "42";</para>
            <para>// Getter:</para>
            <para>Console.WriteLine($"Interested Party identification: {ExampleDeathRecord.InterestedPartyIdentifier}");</para>
            </example>
        </member>
        <member name="P:FhirDeathRecord.DeathRecord.InterestedPartyName">
            <summary>Interested Party Name.</summary>
            <value>an interested party name string.</value>
            <example>
            <para>// Setter:</para>
            <para>ExampleDeathRecord.InterestedPartyName = "Fourty Two";</para>
            <para>// Getter:</para>
            <para>Console.WriteLine($"Interested Party name: {ExampleDeathRecord.InterestedPartyName}");</para>
            </example>
        </member>
        <member name="P:FhirDeathRecord.DeathRecord.InterestedPartyAddress">
            <summary>Interested Party's address.</summary>
            <value>Interested Party's address. A Dictionary representing an address, containing the following key/value pairs:
            <para>"addressLine1" - address, line one</para>
            <para>"addressLine2" - address, line two</para>
            <para>"addressCity" - address, city</para>
            <para>"addressCounty" - address, county</para>
            <para>"addressState" - address, state</para>
            <para>"addressZip" - address, zip</para>
            <para>"addressCountry" - address, country</para>
            </value>
            <example>
            <para>// Setter:</para>
            <para>Dictionary&lt;string, string&gt; address = new Dictionary&lt;string, string&gt;();</para>
            <para>address.Add("addressLine1", "9 Example Street");</para>
            <para>address.Add("addressLine2", "Line 2");</para>
            <para>address.Add("addressCity", "Bedford");</para>
            <para>address.Add("addressCounty", "Middlesex");</para>
            <para>address.Add("addressState", "Massachusetts");</para>
            <para>address.Add("addressZip", "01730");</para>
            <para>address.Add("addressCountry", "United States");</para>
            <para>ExampleDeathRecord.InterestedPartyAddress = address;</para>
            <para>// Getter:</para>
            <para>Console.WriteLine($"Interested Party state: {ExampleDeathRecord.InterestedPartyAddress["addressState"]}");</para>
            </example>
        </member>
        <member name="P:FhirDeathRecord.DeathRecord.InterestedPartyType">
            <summary>Interested Party Type (see https://www.hl7.org/fhir/valueset-organization-type.html).</summary>
            <value>the interested party type</value>
            <example>
            <para>// Setter:</para>
            <para>Dictionary&lt;string, string&gt; type = new Dictionary&lt;string, string&gt;();</para>
            <para>type.Add("code", "prov");</para>
            <para>type.Add("system", "http://terminology.hl7.org/CodeSystem/organization-type");</para>
            <para>type.Add("display", "Healthcare Provider");</para>
            <para>ExampleDeathRecord.InterestedPartyType = type;</para>
            <para>// Getter:</para>
            <para>Console.WriteLine($"Interested Party Type: {ExampleDeathRecord.InterestedPartyType['display']}");</para>
            </example>
        </member>
        <member name="P:FhirDeathRecord.DeathRecord.MannerOfDeathType">
            <summary>Manner of Death Type.</summary>
            <value>the manner of death type</value>
            <example>
            <para>// Setter:</para>
            <para>Dictionary&lt;string, string&gt; manner = new Dictionary&lt;string, string&gt;();</para>
            <para>manner.Add("code", "7878000");</para>
            <para>manner.Add("system", "");</para>
            <para>manner.Add("display", "Accident");</para>
            <para>ExampleDeathRecord.MannerOfDeathType = manner;</para>
            <para>// Getter:</para>
            <para>Console.WriteLine($"Manner Of Death Type: {ExampleDeathRecord.MannerOfDeathType['display']}");</para>
            </example>
        </member>
        <member name="P:FhirDeathRecord.DeathRecord.CertifierGivenNames">
            <summary>Given name(s) of certifier.</summary>
            <value>the certifier's name (first, middle, etc.)</value>
            <example>
            <para>// Setter:</para>
            <para>string[] names = { "Doctor", "Middle" };</para>
            <para>ExampleDeathRecord.CertifierGivenNames = names;</para>
            <para>// Getter:</para>
            <para>Console.WriteLine($"Certifier Given Name(s): {string.Join(", ", ExampleDeathRecord.CertifierGivenNames)}");</para>
            </example>
        </member>
        <member name="P:FhirDeathRecord.DeathRecord.CertifierFamilyName">
            <summary>Family name of certifier.</summary>
            <value>the certifier's family name (i.e. last name)</value>
            <example>
            <para>// Setter:</para>
            <para>ExampleDeathRecord.CertifierFamilyName = "Last";</para>
            <para>// Getter:</para>
            <para>Console.WriteLine($"Certifier's Last Name: {string.Join(", ", ExampleDeathRecord.CertifierFamilyName)}");</para>
            </example>
        </member>
        <member name="P:FhirDeathRecord.DeathRecord.CertifierSuffix">
            <summary>Certifier's Suffix.</summary>
            <value>the certifier's suffix</value>
            <example>
            <para>// Setter:</para>
            <para>ExampleDeathRecord.CertifierSuffix = "Jr.";</para>
            <para>// Getter:</para>
            <para>Console.WriteLine($"Certifier Suffix: {ExampleDeathRecord.CertifierSuffix}");</para>
            </example>
        </member>
        <member name="P:FhirDeathRecord.DeathRecord.CertifierAddress">
            <summary>Certifier's Address.</summary>
            <value>the certifier's address. A Dictionary representing an address, containing the following key/value pairs:
            <para>"addressLine1" - address, line one</para>
            <para>"addressLine2" - address, line two</para>
            <para>"addressCity" - address, city</para>
            <para>"addressCounty" - address, county</para>
            <para>"addressState" - address, state</para>
            <para>"addressZip" - address, zip</para>
            <para>"addressCountry" - address, country</para>
            </value>
            <example>
            <para>// Setter:</para>
            <para>Dictionary&lt;string, string&gt; address = new Dictionary&lt;string, string&gt;();</para>
            <para>address.Add("addressLine1", "123 Test Street");</para>
            <para>address.Add("addressLine2", "Unit 3");</para>
            <para>address.Add("addressCity", "Boston");</para>
            <para>address.Add("addressCounty", "Suffolk");</para>
            <para>address.Add("addressState", "Massachusetts");</para>
            <para>address.Add("addressCountry", "United States");</para>
            <para>address.Add("addressZip", "12345");</para>
            <para>ExampleDeathRecord.CertifierAddress = address;</para>
            <para>// Getter:</para>
            <para>foreach(var pair in ExampleDeathRecord.CertifierAddress)</para>
            <para>{</para>
            <para>      Console.WriteLine($"\tCertifierAddress key: {pair.Key}: value: {pair.Value}");</para>
            <para>};</para>
            </example>
        </member>
        <member name="P:FhirDeathRecord.DeathRecord.CertifierQualification">
            <summary>Certifier Qualification.</summary>
            <value>the certifier qualification</value>
            <example>
            <para>// Setter:</para>
            <para>Dictionary&lt;string, string&gt; qualification = new Dictionary&lt;string, string&gt;();</para>
            <para>qualification.Add("code", "MD");</para>
            <para>qualification.Add("system", "http://hl7.org/fhir/v2/0360/2.7");</para>
            <para>qualification.Add("display", "Doctor of Medicine");</para>
            <para>ExampleDeathRecord.CertifierQualification = qualification;</para>
            <para>// Getter:</para>
            <para>Console.WriteLine($"\tCertifier Qualification: {ExampleDeathRecord.CertifierQualification['display']}");</para>
            </example>
        </member>
        <member name="P:FhirDeathRecord.DeathRecord.ContributingConditions">
            <summary>A significant condition that contributed to death but did not result in the underlying cause
            captured by a CauseOfDeathCondition. Corresponds to part 2 of item 32 of the U.S. Standard Certificate of Death.</summary>
            <value>A significant condition that contributed to death but did not result in the underlying cause
            captured by a CauseOfDeathCondition.</value>
            <example>
            <para>// Setter:</para>
            <para>ExampleDeathRecord.ContributingConditions = "Example Contributing Condition";</para>
            <para>// Getter:</para>
            <para>Console.WriteLine($"Cause: {ExampleDeathRecord.ContributingConditions}");</para>
            </example>
        </member>
        <member name="P:FhirDeathRecord.DeathRecord.COD1A">
            <summary>Cause of Death Part I, Line a.</summary>
        </member>
        <member name="P:FhirDeathRecord.DeathRecord.INTERVAL1A">
            <summary>Cause of Death Part I Interval, Line a.</summary>
        </member>
        <member name="P:FhirDeathRecord.DeathRecord.CODE1A">
            <summary>Cause of Death Part I Code, Line a.</summary>
        </member>
        <member name="M:FhirDeathRecord.DeathRecord.AddReferenceToComposition(System.String)">
            <summary>Add a reference to the Death Record Composition.</summary>
            <param name="reference">a reference.</param>
        </member>
        <member name="M:FhirDeathRecord.DeathRecord.RemoveReferenceFromComposition(System.String)">
            <summary>Remove a reference from the Death Record Composition.</summary>
            <param name="reference">a reference.</param>
        </member>
        <member name="M:FhirDeathRecord.DeathRecord.DictToCodeableConcept(System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>Convert a "code" dictionary to a FHIR CodableConcept.</summary>
            <param name="dict">represents a code.</param>
            <returns>the corresponding CodeableConcept representation of the code.</returns>
        </member>
        <member name="M:FhirDeathRecord.DeathRecord.CodeableConceptToDict(Hl7.Fhir.Model.CodeableConcept)">
            <summary>Convert a FHIR CodableConcept to a "code" Dictionary</summary>
            <param name="codeableConcept">a FHIR CodeableConcept.</param>
            <returns>the corresponding Dictionary representation of the code.</returns>
        </member>
        <member name="M:FhirDeathRecord.DeathRecord.DictToAddress(System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>Convert an "address" dictionary to a FHIR Address.</summary>
            <param name="dict">represents an address.</param>
            <returns>the corresponding FHIR Address representation of the address.</returns>
        </member>
        <member name="M:FhirDeathRecord.DeathRecord.AddressToDict(Hl7.Fhir.Model.Address)">
            <summary>Convert a FHIR Address to an "address" Dictionary</summary>
            <param name="addr">a FHIR Address.</param>
            <returns>the corresponding Dictionary representation of the FHIR Address.</returns>
        </member>
        <member name="M:FhirDeathRecord.DeathRecord.GetAll(System.String)">
            <summary>Given a FHIR path, return the elements that match the given path;
            returns an empty array if no matches are found.</summary>
            <param name="path">represents a FHIR path.</param>
            <returns>all elements that match the given path, or an empty array if no matches are found.</returns>
        </member>
        <member name="M:FhirDeathRecord.DeathRecord.GetFirst(System.String)">
            <summary>Given a FHIR path, return the first element that matches the given path.</summary>
            <param name="path">represents a FHIR path.</param>
            <returns>the first element that matches the given path, or null if no match is found.</returns>
        </member>
        <member name="M:FhirDeathRecord.DeathRecord.GetLast(System.String)">
            <summary>Given a FHIR path, return the last element that matches the given path.</summary>
            <param name="path">represents a FHIR path.</param>
            <returns>the last element that matches the given path, or null if no match is found.</returns>
        </member>
        <member name="M:FhirDeathRecord.DeathRecord.GetAllString(System.String)">
            <summary>Given a FHIR path, return the elements that match the given path as a string;
            returns an empty array if no matches are found.</summary>
            <param name="path">represents a FHIR path.</param>
            <returns>all elements that match the given path as a string, or an empty array if no matches are found.</returns>
        </member>
        <member name="M:FhirDeathRecord.DeathRecord.GetFirstString(System.String)">
            <summary>Given a FHIR path, return the first element that matches the given path as a string;
            returns an empty string if no match is found.</summary>
            <param name="path">represents a FHIR path.</param>
            <returns>the first element that matches the given path as a string, or null if no match is found.</returns>
        </member>
        <member name="M:FhirDeathRecord.DeathRecord.GetLastString(System.String)">
            <summary>Given a FHIR path, return the last element that matches the given path as a string;
            returns an empty string if no match is found.</summary>
            <param name="path">represents a FHIR path.</param>
            <returns>the last element that matches the given path as a string, or null if no match is found.</returns>
        </member>
        <member name="M:FhirDeathRecord.DeathRecord.GetValue(System.Collections.Generic.Dictionary{System.String,System.String},System.String)">
            <summary>Get a value from a Dictionary, but return null if the key doesn't exist.</summary>
        </member>
        <member name="M:FhirDeathRecord.DeathRecord.UpdateDictionary(System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>Combine the given dictionaries and return the combined result.</summary>
        </member>
        <member name="M:FhirDeathRecord.DeathRecord.ToDescription">
            <summary>Returns a JSON encoded structure that maps to the various property
            annotations found in the DeathRecord class. This is useful for scenarios
            where you may want to display the data in user interfaces.</summary>
            <returns>a string representation of this Death Record in a descriptive format.</returns>
        </member>
        <member name="M:FhirDeathRecord.DeathRecord.FromDescription(System.String)">
            <summary>Helper method to return a JSON string representation of this Death Record.</summary>
            <param name="contents">string that represents </param>
            <returns>a new DeathRecord that corresponds to the given descriptive format</returns>
        </member>
        <member name="T:FhirDeathRecord.Property">
            <summary>Property attribute used to describe a DeathRecord property.</summary>
        </member>
        <member name="T:FhirDeathRecord.Property.Types">
            <summary>Enum for describing the property type.</summary>
        </member>
        <member name="F:FhirDeathRecord.Property.Types.String">
            <summary>Parameter is a string.</summary>
        </member>
        <member name="F:FhirDeathRecord.Property.Types.StringArr">
            <summary>Parameter is an array of strings.</summary>
        </member>
        <member name="F:FhirDeathRecord.Property.Types.StringDateTime">
            <summary>Parameter is like a string, but should be treated as a date and time.</summary>
        </member>
        <member name="F:FhirDeathRecord.Property.Types.Bool">
            <summary>Parameter is a bool.</summary>
        </member>
        <member name="F:FhirDeathRecord.Property.Types.Dictionary">
            <summary>Parameter is a Dictionary.</summary>
        </member>
        <member name="F:FhirDeathRecord.Property.Types.TupleArr">
            <summary>Parameter is an array of Tuples.</summary>
        </member>
        <member name="F:FhirDeathRecord.Property.Types.TupleCOD">
            <summary>Parameter is an array of Tuples, specifically for CausesOfDeath.</summary>
        </member>
        <member name="F:FhirDeathRecord.Property.Name">
            <summary>Name of this property.</summary>
        </member>
        <member name="F:FhirDeathRecord.Property.Type">
            <summary>The property type (e.g. string, bool, Dictionary).</summary>
        </member>
        <member name="F:FhirDeathRecord.Property.Category">
            <summary>Category of this property.</summary>
        </member>
        <member name="F:FhirDeathRecord.Property.Description">
            <summary>Description of this property.</summary>
        </member>
        <member name="F:FhirDeathRecord.Property.Serialize">
            <summary>If this field should be kept when serialzing.</summary>
        </member>
        <member name="F:FhirDeathRecord.Property.IGUrl">
            <summary>URL that links to the IG description for this property.</summary>
        </member>
        <member name="F:FhirDeathRecord.Property.Priority">
            <summary>Priority that this should show up in generated lists. Lower numbers come first.</summary>
        </member>
        <member name="M:FhirDeathRecord.Property.#ctor(System.String,FhirDeathRecord.Property.Types,System.String,System.String,System.Boolean,System.String,System.Int32)">
            <summary>Constructor.</summary>
        </member>
        <member name="T:FhirDeathRecord.PropertyParam">
            <summary>Property attribute used to describe a DeathRecord property parameter,
            specifically if the property is a dictionary that has keys.</summary>
        </member>
        <member name="F:FhirDeathRecord.PropertyParam.Key">
            <summary>If the related property is a Dictionary, the key name.</summary>
        </member>
        <member name="F:FhirDeathRecord.PropertyParam.Description">
            <summary>Description of this parameter.</summary>
        </member>
        <member name="M:FhirDeathRecord.PropertyParam.#ctor(System.String,System.String)">
            <summary>Constructor.</summary>
        </member>
        <member name="T:FhirDeathRecord.FHIRPath">
            <summary>Describes a FHIR path that can be used to get to the element.</summary>
        </member>
        <member name="F:FhirDeathRecord.FHIRPath.Path">
            <summary>The relevant FHIR path.</summary>
        </member>
        <member name="F:FhirDeathRecord.FHIRPath.Element">
            <summary>The relevant element.</summary>
        </member>
        <member name="M:FhirDeathRecord.FHIRPath.#ctor(System.String,System.String)">
            <summary>Constructor.</summary>
        </member>
        <member name="T:FhirDeathRecord.IJEField">
            <summary>Property attribute used to describe a field in the IJE Mortality format.</summary>
        </member>
        <member name="F:FhirDeathRecord.IJEField.Field">
            <summary>Field number.</summary>
        </member>
        <member name="F:FhirDeathRecord.IJEField.Location">
            <summary>Beggining location.</summary>
        </member>
        <member name="F:FhirDeathRecord.IJEField.Length">
            <summary>Field length.</summary>
        </member>
        <member name="F:FhirDeathRecord.IJEField.Contents">
            <summary>Description of what the field contains.</summary>
        </member>
        <member name="F:FhirDeathRecord.IJEField.Name">
            <summary>Field name.</summary>
        </member>
        <member name="F:FhirDeathRecord.IJEField.Priority">
            <summary>Priority - lower will be "GET" and "SET" earlier.</summary>
        </member>
        <member name="M:FhirDeathRecord.IJEField.#ctor(System.Int32,System.Int32,System.Int32,System.String,System.String,System.Int32)">
            <summary>Constructor.</summary>
        </member>
        <member name="T:FhirDeathRecord.IJEMortality">
            <summary>A "wrapper" class to convert between a FHIR based <c>DeathRecord</c> and
            a record in IJE Mortality format. Each property of this class corresponds exactly
            with a field in the IJE Mortality format. The getters convert from the embedded
            FHIR based <c>DeathRecord</c> to the IJE format for a specific field, and
            the setters convert from IJE format for a specific field and set that value
            on the embedded FHIR based <c>DeathRecord</c>.</summary>
        </member>
        <member name="F:FhirDeathRecord.IJEMortality.record">
            <summary>FHIR based death record.</summary>
        </member>
        <member name="F:FhirDeathRecord.IJEMortality.dataLookup">
            <summary>IJE data lookup helper. Thread-safe singleton!</summary>
        </member>
        <member name="M:FhirDeathRecord.IJEMortality.#ctor(FhirDeathRecord.DeathRecord)">
            <summary>Constructor that takes a <c>DeathRecord</c>.</summary>
        </member>
        <member name="M:FhirDeathRecord.IJEMortality.#ctor(System.String)">
            <summary>Constructor that takes an IJE string and builds a corresponding internal <c>DeathRecord</c>.</summary>
        </member>
        <member name="M:FhirDeathRecord.IJEMortality.ToString">
            <summary>Converts the internal <c>DeathRecord</c> into an IJE string.</summary>
        </member>
        <member name="M:FhirDeathRecord.IJEMortality.ToDeathRecord">
            <summary>Returns the corresponding <c>DeathRecord</c> for this IJE string.</summary>
        </member>
        <member name="T:FhirDeathRecord.MortalityData">
            <summary>Data helper class for dealing with IJE mortality data. Follows Singleton-esque pattern!</summary>
        </member>
        <member name="P:FhirDeathRecord.MortalityData.Instance">
            <summary>Instance get method for singleton.</summary>
        </member>
        <member name="M:FhirDeathRecord.MortalityData.StateNameToStateCode(System.String)">
            <summary>Given a State, Territory, or Province name - return the representative State code.</summary>
        </member>
        <member name="M:FhirDeathRecord.MortalityData.StateCodeToStateName(System.String)">
            <summary>Given a State, Territory, or Province code - return the representative State, Territory, or Province name.</summary>
        </member>
        <member name="M:FhirDeathRecord.MortalityData.CountryNameToCountryCode(System.String)">
            <summary>Given a Country name - return the representative Country code.</summary>
        </member>
        <member name="M:FhirDeathRecord.MortalityData.CountryCodeToCountryName(System.String)">
            <summary>Given a Country code - return the representative Country name.</summary>
        </member>
        <member name="M:FhirDeathRecord.MortalityData.StateNameAndCountyNameToCountyCode(System.String,System.String)">
            <summary>Given a State and County name - return the representative County code.</summary>
        </member>
        <member name="M:FhirDeathRecord.MortalityData.StateNameAndCountyCodeToCountyName(System.String,System.String)">
            <summary>Given a County code and a State name - return the representative County name.</summary>
        </member>
        <member name="M:FhirDeathRecord.MortalityData.StateNameAndCountyNameAndPlaceNameToPlaceCode(System.String,System.String,System.String)">
            <summary>Given a State, County, and Place name - return the representative Place code.</summary>
        </member>
        <member name="M:FhirDeathRecord.MortalityData.StateNameAndCountyNameAndPlaceCodeToPlaceName(System.String,System.String,System.String)">
            <summary>Given a State and County name, and a Place code - return the representative Place name.</summary>
        </member>
        <member name="M:FhirDeathRecord.MortalityData.StateCodeAndCityNameToCountyName(System.String,System.String)">
            <summary>Given a State and County name, and a Place code - return the representative Place name.</summary>
        </member>
        <member name="M:FhirDeathRecord.MortalityData.EthnicityNameToEthnicityCode(System.String)">
            <summary>Given an Ethnicity name - return the representative Ethnicity code.</summary>
        </member>
        <member name="M:FhirDeathRecord.MortalityData.EthnicityCodeToEthnicityName(System.String)">
            <summary>Given an Ethnicity code - return the representative Ethnicity name.</summary>
        </member>
        <member name="M:FhirDeathRecord.MortalityData.AIANRaceNameToRaceCode(System.String)">
            <summary>Given an American Indian or Alaska Native Race name - return the representative Race code.</summary>
        </member>
        <member name="M:FhirDeathRecord.MortalityData.AIANRaceCodeToRaceName(System.String)">
            <summary>Given an American Indian or Alaska Native Race code - return the representative Race name.</summary>
        </member>
        <member name="M:FhirDeathRecord.MortalityData.ARaceNameToRaceCode(System.String)">
            <summary>Given an Asian Race name - return the representative Race code.</summary>
        </member>
        <member name="M:FhirDeathRecord.MortalityData.ARaceCodeToRaceName(System.String)">
            <summary>Given an Asian Race code - return the representative Race name.</summary>
        </member>
        <member name="M:FhirDeathRecord.MortalityData.BAARaceNameToRaceCode(System.String)">
            <summary>Given a Black or African American Race name - return the representative Race code.</summary>
        </member>
        <member name="M:FhirDeathRecord.MortalityData.BAARaceCodeToRaceName(System.String)">
            <summary>Given a Black or African American Race code - return the representative Race name.</summary>
        </member>
        <member name="M:FhirDeathRecord.MortalityData.NHOPIRaceNameToRaceCode(System.String)">
            <summary>Given a Native Hawaiian or Other Pacific Islander Race name - return the representative Race code.</summary>
        </member>
        <member name="M:FhirDeathRecord.MortalityData.NHOPIRaceCodeToRaceName(System.String)">
            <summary>Given a Native Hawaiian or Other Pacific Islander Race code - return the representative Race name.</summary>
        </member>
        <member name="M:FhirDeathRecord.MortalityData.WRaceNameToRaceCode(System.String)">
            <summary>Given a White Race name - return the representative Race code.</summary>
        </member>
        <member name="M:FhirDeathRecord.MortalityData.WRaceCodeToRaceName(System.String)">
            <summary>Given a White Race code - return the representative Race name.</summary>
        </member>
        <member name="M:FhirDeathRecord.MortalityData.RaceNameToRaceCode(System.String)">
            <summary>Given a Race name - return the representative Race code.</summary>
        </member>
        <member name="M:FhirDeathRecord.MortalityData.RaceCodeToRaceName(System.String)">
            <summary>Given a Race code - return the representative Race name.</summary>
        </member>
        <member name="F:FhirDeathRecord.MortalityData.CDCRaceAIANCodes">
            <summary>CDC Race American Indian or Alaska Native Codes</summary>
        </member>
        <member name="F:FhirDeathRecord.MortalityData.CDCRaceACodes">
            <summary>CDC Race Asian Codes</summary>
        </member>
        <member name="F:FhirDeathRecord.MortalityData.CDCRaceBAACodes">
            <summary>CDC Race Black or African American Codes</summary>
        </member>
        <member name="F:FhirDeathRecord.MortalityData.CDCRaceNHOPICodes">
            <summary>CDC Race Native Hawaiian or Other Pacific Islander Codes</summary>
        </member>
        <member name="F:FhirDeathRecord.MortalityData.CDCRaceWCodes">
            <summary>CDC Race White Codes</summary>
        </member>
        <member name="F:FhirDeathRecord.MortalityData.CDCEthnicityCodes">
            <summary>CDC Ethnicity Codes</summary>
        </member>
        <member name="F:FhirDeathRecord.MortalityData.StateTerritoryProvinceCodes">
            <summary>State and Territory Province Codes</summary>
        </member>
        <member name="F:FhirDeathRecord.MortalityData.CountryCodes">
            <summary>Country Codes</summary>
        </member>
        <member name="F:FhirDeathRecord.MortalityData.PlaceCodes">
            <summary>Place Codes</summary>
        </member>
    </members>
</doc>
